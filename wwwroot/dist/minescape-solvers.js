/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./wwwroot/js/minescape/anagram.js":
/*!*****************************************!*\
  !*** ./wwwroot/js/minescape/anagram.js ***!
  \*****************************************/
/***/ (() => {

eval("var anagrams = null;\r\n\r\nStartup();\r\n\r\nasync function Startup() {\r\n\r\n    let response = await fetch(`../Data/anagrams.json`)\r\n\r\n    if (response.ok)\r\n        anagrams = await response.json()\r\n    else\r\n        console.error(\"Cannot load\")\r\n\r\n    autocomplete(document.getElementById(\"AnagramInput\"), Object.keys(anagrams))\r\n}\r\n\r\nfunction autocomplete(inp, arr) {\r\n    /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n    var currentFocus;\r\n    /*execute a function when someone writes in the text field:*/\r\n    inp.addEventListener(\"input\", function (e) {\r\n        var a, b, i, val = this.value;\r\n        /*close any already open lists of autocompleted values*/\r\n        closeAllLists();\r\n        if (!val) { return false; }\r\n        currentFocus = -1;\r\n        /*create a DIV element that will contain the items (values):*/\r\n        a = document.createElement(\"DIV\");\r\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n        a.setAttribute(\"class\", \"autocomplete-items\");\r\n        /*append the DIV element as a child of the autocomplete container:*/\r\n        this.parentNode.appendChild(a);\r\n        /*for each item in the array...*/\r\n        for (i = 0; i < arr.length; i++) {\r\n            /*check if the item starts with the same letters as the text field value:*/\r\n            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                /*create a DIV element for each matching element:*/\r\n                b = document.createElement(\"DIV\");\r\n                /*make the matching letters bold:*/\r\n                b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n                b.innerHTML += arr[i].substr(val.length);\r\n                /*insert a input field that will hold the current array item's value:*/\r\n                b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n                /*execute a function when someone clicks on the item value (DIV element):*/\r\n                b.addEventListener(\"click\", function (e) {\r\n                    /*insert the value for the autocomplete text field:*/\r\n                    inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n\r\n                    let name = anagrams[inp.value].id\r\n                    let location = anagrams[inp.value].location\r\n                    let x = location.split(\", \")[0]\r\n                    let y = location.split(\", \")[1]\r\n                    let z = location.split(\", \")[2]\r\n                    let tip = anagrams[inp.value].tip\r\n\r\n                    let text = `https://map.minescape.net/#/${x}/${y}/${z}/-1/minescape/minescape`\r\n                    document.getElementById(\"solution-anagram-tip\").innerText = tip;\r\n                    document.getElementById(\"solution-anagram-name\").innerText = name == undefined ? \"Name not set in database\" : name;\r\n                    document.getElementById(\"solution-anagram-url\").href = text;\r\n                    document.getElementById(\"solution-anagram-url\").innerText = location;\r\n\r\n                    /*close the list of autocompleted values,\r\n                    (or any other open lists of autocompleted values:*/\r\n                    closeAllLists();\r\n                });\r\n                a.appendChild(b);\r\n            }\r\n        }\r\n    });\r\n    /*execute a function presses a key on the keyboard:*/\r\n    inp.addEventListener(\"keydown\", function (e) {\r\n        var x = document.getElementById(this.id + \"autocomplete-list\");\r\n        if (x) x = x.getElementsByTagName(\"div\");\r\n        if (e.keyCode == 40) {\r\n            /*If the arrow DOWN key is pressed,\r\n            increase the currentFocus variable:*/\r\n            currentFocus++;\r\n            /*and and make the current item more visible:*/\r\n            addActive(x);\r\n        } else if (e.keyCode == 38) { //up\r\n            /*If the arrow UP key is pressed,\r\n            decrease the currentFocus variable:*/\r\n            currentFocus--;\r\n            /*and and make the current item more visible:*/\r\n            addActive(x);\r\n        } else if (e.keyCode == 13) {\r\n            /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n            e.preventDefault();\r\n            if (currentFocus > -1) {\r\n                /*and simulate a click on the \"active\" item:*/\r\n                if (x) x[currentFocus].click();\r\n            }\r\n        }\r\n    });\r\n    function addActive(x) {\r\n        /*a function to classify an item as \"active\":*/\r\n        if (!x) return false;\r\n        /*start by removing the \"active\" class on all items:*/\r\n        removeActive(x);\r\n        if (currentFocus >= x.length) currentFocus = 0;\r\n        if (currentFocus < 0) currentFocus = (x.length - 1);\r\n        /*add class \"autocomplete-active\":*/\r\n        x[currentFocus].classList.add(\"autocomplete-active\");\r\n    }\r\n    function removeActive(x) {\r\n        /*a function to remove the \"active\" class from all autocomplete items:*/\r\n        for (var i = 0; i < x.length; i++) {\r\n            x[i].classList.remove(\"autocomplete-active\");\r\n        }\r\n    }\r\n    function closeAllLists(elmnt) {\r\n        /*close all autocomplete lists in the document,\r\n        except the one passed as an argument:*/\r\n        var x = document.getElementsByClassName(\"autocomplete-items\");\r\n        for (var i = 0; i < x.length; i++) {\r\n            if (elmnt != x[i] && elmnt != inp) {\r\n                x[i].parentNode.removeChild(x[i]);\r\n            }\r\n        }\r\n    }\r\n    /*execute a function when someone clicks in the document:*/\r\n    document.addEventListener(\"click\", function (e) {\r\n        closeAllLists(e.target);\r\n    });\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/anagram.js\n");

/***/ }),

/***/ "./wwwroot/js/minescape/beacon.js":
/*!****************************************!*\
  !*** ./wwwroot/js/minescape/beacon.js ***!
  \****************************************/
/***/ (() => {

eval("var beacons = null;\r\n\r\nStartup();\r\n\r\nasync function Startup() {\r\n\r\n    let response = await fetch(`../Data/beacons.json`)\r\n\r\n    if (response.ok)\r\n        beacons = await response.json()\r\n    else\r\n        console.error(\"Cannot load\")\r\n\r\n    autocomplete(document.getElementById(\"BeaconInput\"), Object.keys(beacons))\r\n}\r\n\r\nfunction autocomplete(inp, arr) {\r\n    /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n    var currentFocus;\r\n    /*execute a function when someone writes in the text field:*/\r\n    inp.addEventListener(\"input\", function (e) {\r\n        var a, b, i, val = this.value;\r\n        console.log(this.value);\r\n        console.log();\r\n\r\n        /*close any already open lists of autocompleted values*/\r\n        closeAllLists();\r\n        if (!val) { return false; }\r\n        currentFocus = -1;\r\n        /*create a DIV element that will contain the items (values):*/\r\n        a = document.createElement(\"DIV\");\r\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n        a.setAttribute(\"class\", \"autocomplete-items\");\r\n        /*append the DIV element as a child of the autocomplete container:*/\r\n        this.parentNode.appendChild(a);\r\n        /*for each item in the array...*/\r\n        for (i = 0; i < arr.length; i++) {\r\n            /*check if the item starts with the same letters as the text field value:*/\r\n            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                /*create a DIV element for each matching element:*/\r\n                b = document.createElement(\"DIV\");\r\n                /*make the matching letters bold:*/\r\n                b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n                b.innerHTML += arr[i].substr(val.length);\r\n                /*insert a input field that will hold the current array item's value:*/\r\n                b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n                /*execute a function when someone clicks on the item value (DIV element):*/\r\n                b.addEventListener(\"click\", function (e) {\r\n                    /*insert the value for the autocomplete text field:*/\r\n                    inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n\r\n                    let name = beacons[inp.value].id\r\n                    let location = beacons[inp.value].location\r\n                    let x = location.split(\", \")[0]\r\n                    let y = location.split(\", \")[1]\r\n                    let z = location.split(\", \")[2]\r\n                    let tip = beacons[inp.value].tip\r\n\r\n                    let text = `https://map.minescape.net/#/${x}/${y}/${z}/-1/minescape/minescape`\r\n                    document.getElementById(\"solution-beacon-tip\").innerText = tip;\r\n                    document.getElementById(\"solution-beacon-url\").href = text;\r\n                    document.getElementById(\"solution-beacon-url\").innerText = location;\r\n\r\n                    /*close the list of autocompleted values,\r\n                    (or any other open lists of autocompleted values:*/\r\n                    closeAllLists();\r\n                });\r\n                a.appendChild(b);\r\n            }\r\n        }\r\n    });\r\n    /*execute a function presses a key on the keyboard:*/\r\n    inp.addEventListener(\"keydown\", function (e) {\r\n        var x = document.getElementById(this.id + \"autocomplete-list\");\r\n        if (x) x = x.getElementsByTagName(\"div\");\r\n        if (e.keyCode == 40) {\r\n            /*If the arrow DOWN key is pressed,\r\n            increase the currentFocus variable:*/\r\n            currentFocus++;\r\n            /*and and make the current item more visible:*/\r\n            addActive(x);\r\n        } else if (e.keyCode == 38) { //up\r\n            /*If the arrow UP key is pressed,\r\n            decrease the currentFocus variable:*/\r\n            currentFocus--;\r\n            /*and and make the current item more visible:*/\r\n            addActive(x);\r\n        } else if (e.keyCode == 13) {\r\n            /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n            e.preventDefault();\r\n            if (currentFocus > -1) {\r\n                /*and simulate a click on the \"active\" item:*/\r\n                if (x) x[currentFocus].click();\r\n            }\r\n        }\r\n    });\r\n    function addActive(x) {\r\n        /*a function to classify an item as \"active\":*/\r\n        if (!x) return false;\r\n        /*start by removing the \"active\" class on all items:*/\r\n        removeActive(x);\r\n        if (currentFocus >= x.length) currentFocus = 0;\r\n        if (currentFocus < 0) currentFocus = (x.length - 1);\r\n        /*add class \"autocomplete-active\":*/\r\n        x[currentFocus].classList.add(\"autocomplete-active\");\r\n    }\r\n    function removeActive(x) {\r\n        /*a function to remove the \"active\" class from all autocomplete items:*/\r\n        for (var i = 0; i < x.length; i++) {\r\n            x[i].classList.remove(\"autocomplete-active\");\r\n        }\r\n    }\r\n    function closeAllLists(elmnt) {\r\n        /*close all autocomplete lists in the document,\r\n        except the one passed as an argument:*/\r\n        var x = document.getElementsByClassName(\"autocomplete-items\");\r\n        for (var i = 0; i < x.length; i++) {\r\n            if (elmnt != x[i] && elmnt != inp) {\r\n                x[i].parentNode.removeChild(x[i]);\r\n            }\r\n        }\r\n    }\r\n    /*execute a function when someone clicks in the document:*/\r\n    document.addEventListener(\"click\", function (e) {\r\n        closeAllLists(e.target);\r\n    });\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/beacon.js\n");

/***/ }),

/***/ "./wwwroot/js/minescape/chest.js":
/*!***************************************!*\
  !*** ./wwwroot/js/minescape/chest.js ***!
  \***************************************/
/***/ (() => {

eval("var chests = null;\r\n\r\nStartup();\r\n\r\nasync function Startup() {\r\n\r\n    let response = await fetch(`../Data/chests.json`)\r\n\r\n    if (response.ok)\r\n        chests = await response.json()\r\n    else\r\n        console.error(\"Cannot load\")\r\n\r\n    autocomplete(document.getElementById(\"ChestInput\"), Object.keys(chests))\r\n}\r\n\r\nfunction autocomplete(inp, arr) {\r\n    /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n    var currentFocus;\r\n    /*execute a function when someone writes in the text field:*/\r\n    inp.addEventListener(\"input\", function (e) {\r\n        var a, b, i, val = this.value;\r\n        /*close any already open lists of autocompleted values*/\r\n        closeAllLists();\r\n        if (!val) { return false; }\r\n        currentFocus = -1;\r\n        /*create a DIV element that will contain the items (values):*/\r\n        a = document.createElement(\"DIV\");\r\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n        a.setAttribute(\"class\", \"autocomplete-items\");\r\n        /*append the DIV element as a child of the autocomplete container:*/\r\n        this.parentNode.appendChild(a);\r\n        /*for each item in the array...*/\r\n        for (i = 0; i < arr.length; i++) {\r\n            /*check if the item starts with the same letters as the text field value:*/\r\n            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n                /*create a DIV element for each matching element:*/\r\n                b = document.createElement(\"DIV\");\r\n                /*make the matching letters bold:*/\r\n                b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n                b.innerHTML += arr[i].substr(val.length);\r\n                /*insert a input field that will hold the current array item's value:*/\r\n                b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n                /*execute a function when someone clicks on the item value (DIV element):*/\r\n                b.addEventListener(\"click\", function (e) {\r\n                    /*insert the value for the autocomplete text field:*/\r\n                    inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n\r\n                    let name = chests[inp.value].id\r\n                    let location = chests[inp.value].location\r\n                    let x = location.split(\", \")[0]\r\n                    let y = location.split(\", \")[1]\r\n                    let z = location.split(\", \")[2]\r\n                    let tip = chests[inp.value].tip\r\n\r\n                    let text = `https://map.minescape.net/#/${x}/${y}/${z}/-1/minescape/minescape`\r\n                    document.getElementById(\"solution-chest-tip\").innerText = tip;\r\n                    document.getElementById(\"solution-chest-url\").href = text;\r\n                    document.getElementById(\"solution-chest-url\").innerText = location;\r\n\r\n                    /*close the list of autocompleted values,\r\n                    (or any other open lists of autocompleted values:*/\r\n                    closeAllLists();\r\n                });\r\n                a.appendChild(b);\r\n            }\r\n        }\r\n    });\r\n    /*execute a function presses a key on the keyboard:*/\r\n    inp.addEventListener(\"keydown\", function (e) {\r\n        var x = document.getElementById(this.id + \"autocomplete-list\");\r\n        if (x) x = x.getElementsByTagName(\"div\");\r\n        if (e.keyCode == 40) {\r\n            /*If the arrow DOWN key is pressed,\r\n            increase the currentFocus variable:*/\r\n            currentFocus++;\r\n            /*and and make the current item more visible:*/\r\n            addActive(x);\r\n        } else if (e.keyCode == 38) { //up\r\n            /*If the arrow UP key is pressed,\r\n            decrease the currentFocus variable:*/\r\n            currentFocus--;\r\n            /*and and make the current item more visible:*/\r\n            addActive(x);\r\n        } else if (e.keyCode == 13) {\r\n            /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n            e.preventDefault();\r\n            if (currentFocus > -1) {\r\n                /*and simulate a click on the \"active\" item:*/\r\n                if (x) x[currentFocus].click();\r\n            }\r\n        }\r\n    });\r\n    function addActive(x) {\r\n        /*a function to classify an item as \"active\":*/\r\n        if (!x) return false;\r\n        /*start by removing the \"active\" class on all items:*/\r\n        removeActive(x);\r\n        if (currentFocus >= x.length) currentFocus = 0;\r\n        if (currentFocus < 0) currentFocus = (x.length - 1);\r\n        /*add class \"autocomplete-active\":*/\r\n        x[currentFocus].classList.add(\"autocomplete-active\");\r\n    }\r\n    function removeActive(x) {\r\n        /*a function to remove the \"active\" class from all autocomplete items:*/\r\n        for (var i = 0; i < x.length; i++) {\r\n            x[i].classList.remove(\"autocomplete-active\");\r\n        }\r\n    }\r\n    function closeAllLists(elmnt) {\r\n        /*close all autocomplete lists in the document,\r\n        except the one passed as an argument:*/\r\n        var x = document.getElementsByClassName(\"autocomplete-items\");\r\n        for (var i = 0; i < x.length; i++) {\r\n            if (elmnt != x[i] && elmnt != inp) {\r\n                x[i].parentNode.removeChild(x[i]);\r\n            }\r\n        }\r\n    }\r\n    /*execute a function when someone clicks in the document:*/\r\n    document.addEventListener(\"click\", function (e) {\r\n        closeAllLists(e.target);\r\n    });\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/chest.js\n");

/***/ }),

/***/ "./wwwroot/js/minescape/cypher.js":
/*!****************************************!*\
  !*** ./wwwroot/js/minescape/cypher.js ***!
  \****************************************/
/***/ (() => {

eval("var anagrams = null;\r\n\r\nStartup();\r\n\r\nasync function Startup() {\r\n\r\n    let response = await fetch(`../Data/anagrams.json`)\r\n\r\n    if (response.ok)\r\n        anagrams = await response.json()\r\n    else\r\n        console.error(\"Cannot load\")\r\n\r\n    document.getElementById(\"CypherInput\").addEventListener(\"input\", function (e, val) {\r\n        let cipher = e.target.value\r\n        let ciphers = Object.keys(anagrams).filter(function (val) {\r\n            return anagrams[val].id.length == cipher.length && anagrams[val].id.length > 0\r\n        })\r\n\r\n        let found = null;\r\n        for (let i = 1; i <= 26; i++) {\r\n            let shifted = caesarShift(cipher, i)\r\n            for (let j = 0; j < ciphers.length; j++) {\r\n                if (anagrams[ciphers[j]].id == shifted) {\r\n                    found = anagrams[ciphers[j]];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (found == null) {\r\n            document.getElementById(\"solution-cypher-name\").innerText = \"Not found\";\r\n            document.getElementById(\"solution-cypher-tip\").innerText = \"\";\r\n            document.getElementById(\"solution-cypher-url\").href = \"\";\r\n            document.getElementById(\"solution-cypher-url\").innerText = \"\";\r\n        }\r\n        else {\r\n\r\n\r\n            let name = found.id\r\n            let location = found.location\r\n            let x = location.split(\", \")[0]\r\n            let y = location.split(\", \")[1]\r\n            let z = location.split(\", \")[2]\r\n            let tip = found.tip\r\n\r\n            let text = `https://map.minescape.net/#/${x}/${y}/${z}/-1/minescape/minescape`\r\n            document.getElementById(\"solution-cypher-tip\").innerText = tip;\r\n            document.getElementById(\"solution-cypher-name\").innerText = name == undefined ? \"No name provided\" : name;\r\n            document.getElementById(\"solution-cypher-url\").href = text;\r\n            document.getElementById(\"solution-cypher-url\").innerText = location;\r\n        }\r\n    });\r\n}\r\n\r\nfunction caesarShift(str, amount) {\r\n    // Wrap the amount\r\n    if (amount < 0) {\r\n        return caesarShift(str, amount + 26);\r\n    }\r\n\r\n    // Make an output variable\r\n    var output = \"\";\r\n\r\n    // Go through each character\r\n    for (var i = 0; i < str.length; i++) {\r\n        // Get the character we'll be appending\r\n        var c = str[i];\r\n\r\n        // If it's a letter...\r\n        if (c.match(/[a-z]/i)) {\r\n            // Get its code\r\n            var code = c.codePointAt();\r\n\r\n            // Uppercase letters\r\n            if (code >= 65 && code <= 90) {\r\n                c = String.fromCharCode(((code - 65 + amount) % 26) + 65);\r\n            }\r\n\r\n            // Lowercase letters\r\n            else if (code >= 97 && code <= 122) {\r\n                c = String.fromCharCode(((code - 97 + amount) % 26) + 97);\r\n            }\r\n        }\r\n\r\n        // Append\r\n        output += c;\r\n    }\r\n\r\n    // All done!\r\n    return output;\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3dyb290L2pzL21pbmVzY2FwZS9jeXBoZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQSw0QkFBNEIsb0JBQW9CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhcHBsaWNhdGlvbjEvLi93d3dyb290L2pzL21pbmVzY2FwZS9jeXBoZXIuanM/OWNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYW5hZ3JhbXMgPSBudWxsO1xyXG5cclxuU3RhcnR1cCgpO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gU3RhcnR1cCgpIHtcclxuXHJcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgLi4vRGF0YS9hbmFncmFtcy5qc29uYClcclxuXHJcbiAgICBpZiAocmVzcG9uc2Uub2spXHJcbiAgICAgICAgYW5hZ3JhbXMgPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgIGVsc2VcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiQ2Fubm90IGxvYWRcIilcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkN5cGhlcklucHV0XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCBmdW5jdGlvbiAoZSwgdmFsKSB7XHJcbiAgICAgICAgbGV0IGNpcGhlciA9IGUudGFyZ2V0LnZhbHVlXHJcbiAgICAgICAgbGV0IGNpcGhlcnMgPSBPYmplY3Qua2V5cyhhbmFncmFtcykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGFuYWdyYW1zW3ZhbF0uaWQubGVuZ3RoID09IGNpcGhlci5sZW5ndGggJiYgYW5hZ3JhbXNbdmFsXS5pZC5sZW5ndGggPiAwXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgbGV0IGZvdW5kID0gbnVsbDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSAyNjsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBzaGlmdGVkID0gY2Flc2FyU2hpZnQoY2lwaGVyLCBpKVxyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNpcGhlcnMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIGlmIChhbmFncmFtc1tjaXBoZXJzW2pdXS5pZCA9PSBzaGlmdGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm91bmQgPSBhbmFncmFtc1tjaXBoZXJzW2pdXTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGZvdW5kID09IG51bGwpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb2x1dGlvbi1jeXBoZXItbmFtZVwiKS5pbm5lclRleHQgPSBcIk5vdCBmb3VuZFwiO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvbHV0aW9uLWN5cGhlci10aXBcIikuaW5uZXJUZXh0ID0gXCJcIjtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb2x1dGlvbi1jeXBoZXItdXJsXCIpLmhyZWYgPSBcIlwiO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvbHV0aW9uLWN5cGhlci11cmxcIikuaW5uZXJUZXh0ID0gXCJcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcblxyXG5cclxuICAgICAgICAgICAgbGV0IG5hbWUgPSBmb3VuZC5pZFxyXG4gICAgICAgICAgICBsZXQgbG9jYXRpb24gPSBmb3VuZC5sb2NhdGlvblxyXG4gICAgICAgICAgICBsZXQgeCA9IGxvY2F0aW9uLnNwbGl0KFwiLCBcIilbMF1cclxuICAgICAgICAgICAgbGV0IHkgPSBsb2NhdGlvbi5zcGxpdChcIiwgXCIpWzFdXHJcbiAgICAgICAgICAgIGxldCB6ID0gbG9jYXRpb24uc3BsaXQoXCIsIFwiKVsyXVxyXG4gICAgICAgICAgICBsZXQgdGlwID0gZm91bmQudGlwXHJcblxyXG4gICAgICAgICAgICBsZXQgdGV4dCA9IGBodHRwczovL21hcC5taW5lc2NhcGUubmV0LyMvJHt4fS8ke3l9LyR7en0vLTEvbWluZXNjYXBlL21pbmVzY2FwZWBcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb2x1dGlvbi1jeXBoZXItdGlwXCIpLmlubmVyVGV4dCA9IHRpcDtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb2x1dGlvbi1jeXBoZXItbmFtZVwiKS5pbm5lclRleHQgPSBuYW1lID09IHVuZGVmaW5lZCA/IFwiTm8gbmFtZSBwcm92aWRlZFwiIDogbmFtZTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb2x1dGlvbi1jeXBoZXItdXJsXCIpLmhyZWYgPSB0ZXh0O1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvbHV0aW9uLWN5cGhlci11cmxcIikuaW5uZXJUZXh0ID0gbG9jYXRpb247XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNhZXNhclNoaWZ0KHN0ciwgYW1vdW50KSB7XHJcbiAgICAvLyBXcmFwIHRoZSBhbW91bnRcclxuICAgIGlmIChhbW91bnQgPCAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGNhZXNhclNoaWZ0KHN0ciwgYW1vdW50ICsgMjYpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1ha2UgYW4gb3V0cHV0IHZhcmlhYmxlXHJcbiAgICB2YXIgb3V0cHV0ID0gXCJcIjtcclxuXHJcbiAgICAvLyBHbyB0aHJvdWdoIGVhY2ggY2hhcmFjdGVyXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIC8vIEdldCB0aGUgY2hhcmFjdGVyIHdlJ2xsIGJlIGFwcGVuZGluZ1xyXG4gICAgICAgIHZhciBjID0gc3RyW2ldO1xyXG5cclxuICAgICAgICAvLyBJZiBpdCdzIGEgbGV0dGVyLi4uXHJcbiAgICAgICAgaWYgKGMubWF0Y2goL1thLXpdL2kpKSB7XHJcbiAgICAgICAgICAgIC8vIEdldCBpdHMgY29kZVxyXG4gICAgICAgICAgICB2YXIgY29kZSA9IGMuY29kZVBvaW50QXQoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIFVwcGVyY2FzZSBsZXR0ZXJzXHJcbiAgICAgICAgICAgIGlmIChjb2RlID49IDY1ICYmIGNvZGUgPD0gOTApIHtcclxuICAgICAgICAgICAgICAgIGMgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoY29kZSAtIDY1ICsgYW1vdW50KSAlIDI2KSArIDY1KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gTG93ZXJjYXNlIGxldHRlcnNcclxuICAgICAgICAgICAgZWxzZSBpZiAoY29kZSA+PSA5NyAmJiBjb2RlIDw9IDEyMikge1xyXG4gICAgICAgICAgICAgICAgYyA9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjb2RlIC0gOTcgKyBhbW91bnQpICUgMjYpICsgOTcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBcHBlbmRcclxuICAgICAgICBvdXRwdXQgKz0gYztcclxuICAgIH1cclxuXHJcbiAgICAvLyBBbGwgZG9uZSFcclxuICAgIHJldHVybiBvdXRwdXQ7XHJcbn07XHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/cypher.js\n");

/***/ }),

/***/ "./wwwroot/js/minescape/light.js":
/*!***************************************!*\
  !*** ./wwwroot/js/minescape/light.js ***!
  \***************************************/
/***/ (() => {

eval("var matrices = Array.apply(null, Array(7)).map(function () { });\r\n\r\nvar debug = false;\r\n\r\nvar checkbox = document.getElementById(\"LightDebug\");\r\n\r\ncheckbox.addEventListener('change', function () {\r\n    debug = this.checked;\r\n});\r\n\r\nArray.prototype.forEach.call(document.getElementsByClassName(\"lights-input\"), function (val, ind) {\r\n    let id = val.id.replace(\"LightInput\", \"\");\r\n    if (val.id.replace(\"LightInput\", \"\") == \"0\")\r\n        return;\r\n    document.getElementById(\"LightInput\" + id).style.display = \"none\";\r\n    document.getElementById(\"LightDescription\" + id).style.display = \"none\";\r\n    document.getElementById(\"LightTip\" + id).style.display = \"none\";\r\n    return;\r\n});\r\n\r\nArray.prototype.forEach.call(document.getElementsByClassName(\"lights-input\"), function (val, ind) {\r\n    val.addEventListener('change', function (event) {\r\n        const reader = new FileReader();\r\n        reader.onload = function (event) {\r\n            const img = new Image();\r\n            img.onload = function () {\r\n                let canvas = document.getElementById('canvas-lb-'+ind);\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                canvas.getContext('2d').drawImage(img, 0, 0);\r\n\r\n                let preview = document.getElementById('canvas-preview-' + ind);\r\n                preview.getContext('2d').drawImage(img, 0, 0);\r\n\r\n                if (GetMatrix(ind)) {\r\n                    preview.style.display = \"\";\r\n                    document.getElementById('LightTip' + ind).style.display = \"none\";\r\n                    val.style.display = \"none\";\r\n                    document.getElementById('LightDescription' + ind).style.display = \"none\";\r\n\r\n                    if (ind + 1 <= 8) {\r\n                        document.getElementById('LightInput' + (ind + 1)).style.display = \"\";\r\n                        document.getElementById('LightDescription' + (ind + 1)).style.display = \"\";\r\n                    }\r\n                    else\r\n                        Solve();\r\n                }\r\n                    // Loaded fine\r\n                else\r\n                    document.getElementById('LightTip' + ind).innerText = \"Couldn't process the image, try again with a new screenshot\";\r\n            };\r\n            img.src = event.target.result;\r\n        };\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    });\r\n\r\n});\r\n\r\nfunction TopRightCorner(src) {\r\n    for (let x = src.size().width-1; x > 0; x--) {\r\n        for (let y = 0; y < src.size().height-1; y++) {\r\n            let rgba = src.ucharPtr(y, x);\r\n            if (rgba[0] == 136 && rgba[1] == 136 && rgba[2] == 122) {\r\n                y--;\r\n                console.log({ x, y });\r\n                console.log(rgba);\r\n                rgba = src.ucharPtr(y, x);\r\n                while (rgba[0] == 0 && rgba[1] == 0 && rgba[2] == 1) {\r\n                    y--;\r\n                    rgba = src.ucharPtr(y, x);\r\n                }\r\n                y++;\r\n                return { x, y };\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction GetTileSize(src, pos) {\r\n    let i = 0;\r\n    let rgba = src.ucharPtr(pos.y, pos.x);\r\n    if (debug) console.log(rgba);\r\n    while (i < 5 || (rgba[0] != 0 || rgba[1] != 0 || rgba[2] != 1)) {\r\n        i++;\r\n        pos.x--;\r\n        pos.y++;\r\n        rgba = src.ucharPtr(pos.y, pos.x);\r\n    }\r\n    if (debug) console.log(\"Passed top bottom left corner at: \")\r\n    if (debug) console.log({ x: pos.x, y: pos.y });\r\n\r\n    while (rgba[0] == 0 && rgba[1] == 0 && rgba[2] == 1) {\r\n        i++;\r\n        pos.x--;\r\n        pos.y++;\r\n        rgba = src.ucharPtr(pos.y, pos.x);\r\n    }\r\n    if (debug) console.log(\"Position after blacks\")\r\n    if (debug) console.log({ x: pos.x, y: pos.y });\r\n    if (debug) console.log(rgba);\r\n\r\n    let k = 0;\r\n    while (rgba[0] != 0 && rgba[1] != 0 && rgba[2] != 1) {\r\n        k++;\r\n        pos.x--;\r\n        pos.y++;\r\n        rgba = src.ucharPtr(pos.y, pos.x);\r\n    }\r\n\r\n    if (debug) console.log(\"Position after colored\")\r\n    if (debug) console.log({ x: pos.x, y: pos.y });\r\n    if (debug) console.log(rgba);\r\n\r\n    if (debug) console.log(\"k: \" + k);\r\n    i += k;\r\n    if (debug) console.log(\"i: \" + i);\r\n\r\n    return { i, k: k/2 };\r\n}\r\n\r\nfunction IsOn(src, size) {\r\n    let rgba = src.ucharPtr(Math.floor(size / 2), Math.floor(size / 2));\r\n    if (debug) console.log(rgba);\r\n    if (rgba[0] < 60 && rgba[1] < 60)\r\n        return 0;\r\n    return 1;\r\n}\r\n\r\nvar xor_matrix = function (m1, m2) {\r\n    return range(0, 5).map(function (r) {\r\n        return range(0, 5).map(function (c) {\r\n            return m1[r][c] ^ m2[r][c]\r\n        })\r\n    })\r\n}\r\n\r\nfunction range(start, end) {\r\n    if (start === end) return [start];\r\n    return [start, ...range(start + 1, end)];\r\n}\r\n\r\nfunction isEqual(a, b) {\r\n    for (let i = 0; i < 5; i++)\r\n        for (let j = 0; j < 5; j++)\r\n            if (a[i][j] != b[i][j]) return false\r\n    return true\r\n}\r\n\r\nfunction Solve() {\r\n    let chars = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\r\n    let one_matrix = (function () {\r\n        return range(1, 6).map(function (r) {\r\n            return range(1, 6).map(function (c) {\r\n                return 1;\r\n            });\r\n        })\r\n    })();\r\n    let data = {}\r\n    let last_state;\r\n\r\n    for (let i = 0; i < matrices.length-1; i++) {\r\n        last_state = matrices[i];\r\n        if (debug) console.log(last_state);\r\n        data[chars[i]] = xor_matrix(last_state, matrices[i+1])\r\n    }\r\n    last_state = matrices[matrices.length-1];\r\n\r\n    let combos = ['A', 'BA', 'B', 'CA', 'CBA', 'CB', 'C', 'DA', 'DBA', 'DB', 'DCA', 'DCBA', 'DCB', 'DC', 'D', 'EA', 'EBA', 'EB', 'ECA', 'ECBA', 'ECB', 'EC', 'EDA', 'EDBA', 'EDB', 'EDCA', 'EDCBA', 'EDCB', 'EDC', 'ED', 'E', 'FA', 'FBA', 'FB', 'FCA', 'FCBA', 'FCB', 'FC', 'FDA', 'FDBA', 'FDB', 'FDCA', 'FDCBA', 'FDCB', 'FDC', 'FD', 'FEA', 'FEBA', 'FEB', 'FECA', 'FECBA', 'FECB', 'FEC', 'FEDA', 'FEDBA', 'FEDB', 'FEDCA', 'FEDCBA', 'FEDCB', 'FEDC', 'FED', 'FE', 'F', 'GA', 'GBA', 'GB', 'GCA', 'GCBA', 'GCB', 'GC', 'GDA', 'GDBA', 'GDB', 'GDCA', 'GDCBA', 'GDCB', 'GDC', 'GD', 'GEA', 'GEBA', 'GEB', 'GECA', 'GECBA', 'GECB', 'GEC', 'GEDA', 'GEDBA', 'GEDB', 'GEDCA', 'GEDCBA', 'GEDCB', 'GEDC', 'GED', 'GE', 'GFA', 'GFBA', 'GFB', 'GFCA', 'GFCBA', 'GFCB', 'GFC', 'GFDA', 'GFDBA', 'GFDB', 'GFDCA', 'GFDCBA', 'GFDCB', 'GFDC', 'GFD', 'GFEA', 'GFEBA', 'GFEB', 'GFECA', 'GFECBA', 'GFECB', 'GFEC', 'GFEDA', 'GFEDBA', 'GFEDB', 'GFEDCA', 'GFEDCBA', 'GFEDCB', 'GFEDC', 'GFED', 'GFE', 'GF', 'G', 'HA', 'HBA', 'HB', 'HCA', 'HCBA', 'HCB', 'HC', 'HDA', 'HDBA', 'HDB', 'HDCA', 'HDCBA', 'HDCB', 'HDC', 'HD', 'HEA', 'HEBA', 'HEB', 'HECA', 'HECBA', 'HECB', 'HEC', 'HEDA', 'HEDBA', 'HEDB', 'HEDCA', 'HEDCBA', 'HEDCB', 'HEDC', 'HED', 'HE', 'HFA', 'HFBA', 'HFB', 'HFCA', 'HFCBA', 'HFCB', 'HFC', 'HFDA', 'HFDBA', 'HFDB', 'HFDCA', 'HFDCBA', 'HFDCB', 'HFDC', 'HFD', 'HFEA', 'HFEBA', 'HFEB', 'HFECA', 'HFECBA', 'HFECB', 'HFEC', 'HFEDA', 'HFEDBA', 'HFEDB', 'HFEDCA', 'HFEDCBA', 'HFEDCB', 'HFEDC', 'HFED', 'HFE', 'HF', 'HGA', 'HGBA', 'HGB', 'HGCA', 'HGCBA', 'HGCB', 'HGC', 'HGDA', 'HGDBA', 'HGDB', 'HGDCA', 'HGDCBA', 'HGDCB', 'HGDC', 'HGD', 'HGEA', 'HGEBA', 'HGEB', 'HGECA', 'HGECBA', 'HGECB', 'HGEC', 'HGEDA', 'HGEDBA', 'HGEDB', 'HGEDCA', 'HGEDCBA', 'HGEDCB', 'HGEDC', 'HGED', 'HGE', 'HGFA', 'HGFBA', 'HGFB', 'HGFCA', 'HGFCBA', 'HGFCB', 'HGFC', 'HGFDA', 'HGFDBA', 'HGFDB', 'HGFDCA', 'HGFDCBA', 'HGFDCB', 'HGFDC', 'HGFD', 'HGFEA', 'HGFEBA', 'HGFEB', 'HGFECA', 'HGFECBA', 'HGFECB', 'HGFEC', 'HGFEDA', 'HGFEDBA', 'HGFEDB', 'HGFEDCA', 'HGFEDCBA', 'HGFEDCB', 'HGFEDC', 'HGFED', 'HGFE', 'HGF', 'HG', 'H', '']\r\n\r\n    var solution = combos.find(function (letters) {\r\n        var m = last_state\r\n        letters.split('').forEach(function (l) {\r\n            m = xor_matrix(m, data[l])\r\n        })\r\n        return isEqual(m, one_matrix)\r\n    })\r\n    if (solution != \"\")\r\n        document.getElementById('LightSolution').innerText = \"Solution: \" + solution;\r\n    else\r\n        document.getElementById('LightSolution').innerText = \"No solution found\";\r\n    document.getElementById('LightSolution').style.display = \"\";\r\n    console.log(solution);\r\n}\r\n\r\nfunction GetMatrix(ind) {\r\n    if (debug) console.log(\"canvas-lb-\" + ind);\r\n    let src = cv.imread('canvas-lb-' + ind);\r\n    if (debug) console.log(\"src\");\r\n    if (debug) console.log(src);\r\n\r\n    let topRightCorner = TopRightCorner(src);\r\n\r\n    if (debug) console.log(\"topRightCorner\");\r\n    if (debug) console.log(topRightCorner);\r\n\r\n    let tileSize = GetTileSize(src, { x: topRightCorner.x, y: topRightCorner.y });\r\n\r\n    topRightCorner.x += tileSize.k;\r\n    topRightCorner.y -= tileSize.k;\r\n\r\n    if (debug) console.log(\"topRightCorner\");\r\n    if (debug) console.log(topRightCorner);\r\n\r\n    if (debug) console.log(tileSize);\r\n\r\n    let topLeftCornerOfLights = { x: topRightCorner.x - (tileSize.i * 9), y: topRightCorner.y };\r\n\r\n\r\n    if (debug) console.log(\"topLeftCornerOfLights\");\r\n    if (debug) console.log(topLeftCornerOfLights);\r\n\r\n    let matrix = [];\r\n    for (let i = 0; i < 6; i++) {\r\n        let y = topLeftCornerOfLights.y + (tileSize.i * i);\r\n        let row = [];\r\n        for (let k = 0; k < 6; k++) {\r\n            let x = topLeftCornerOfLights.x + (tileSize.i * k);\r\n            let rect = new cv.Rect(x, y, tileSize.i, tileSize.i);\r\n            let isOn = IsOn(src.roi(rect), tileSize.i);\r\n            row.push(isOn);\r\n        }\r\n        matrix.push(row);\r\n    }\r\n\r\n    //console.log(\"matrix\");\r\n    //console.log(matrix);\r\n\r\n    matrices[ind] = matrix;\r\n    return true;\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3dyb290L2pzL21pbmVzY2FwZS9saWdodC5qcyIsIm1hcHBpbmdzIjoiQUFBQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLHFDQUFxQyxPQUFPO0FBQzVDLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0Isd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywwQ0FBMEM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwbGljYXRpb24xLy4vd3d3cm9vdC9qcy9taW5lc2NhcGUvbGlnaHQuanM/ZTRkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWF0cmljZXMgPSBBcnJheS5hcHBseShudWxsLCBBcnJheSg3KSkubWFwKGZ1bmN0aW9uICgpIHsgfSk7XHJcblxyXG52YXIgZGVidWcgPSBmYWxzZTtcclxuXHJcbnZhciBjaGVja2JveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTGlnaHREZWJ1Z1wiKTtcclxuXHJcbmNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgIGRlYnVnID0gdGhpcy5jaGVja2VkO1xyXG59KTtcclxuXHJcbkFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImxpZ2h0cy1pbnB1dFwiKSwgZnVuY3Rpb24gKHZhbCwgaW5kKSB7XHJcbiAgICBsZXQgaWQgPSB2YWwuaWQucmVwbGFjZShcIkxpZ2h0SW5wdXRcIiwgXCJcIik7XHJcbiAgICBpZiAodmFsLmlkLnJlcGxhY2UoXCJMaWdodElucHV0XCIsIFwiXCIpID09IFwiMFwiKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTGlnaHRJbnB1dFwiICsgaWQpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTGlnaHREZXNjcmlwdGlvblwiICsgaWQpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTGlnaHRUaXBcIiArIGlkKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICByZXR1cm47XHJcbn0pO1xyXG5cclxuQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibGlnaHRzLWlucHV0XCIpLCBmdW5jdGlvbiAodmFsLCBpbmQpIHtcclxuICAgIHZhbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgIGltZy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbnZhcy1sYi0nK2luZCk7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggPSBpbWcud2lkdGg7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gaW1nLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpLmRyYXdJbWFnZShpbWcsIDAsIDApO1xyXG5cclxuICAgICAgICAgICAgICAgIGxldCBwcmV2aWV3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbnZhcy1wcmV2aWV3LScgKyBpbmQpO1xyXG4gICAgICAgICAgICAgICAgcHJldmlldy5nZXRDb250ZXh0KCcyZCcpLmRyYXdJbWFnZShpbWcsIDAsIDApO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChHZXRNYXRyaXgoaW5kKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXcuc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xpZ2h0VGlwJyArIGluZCkuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xpZ2h0RGVzY3JpcHRpb24nICsgaW5kKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmQgKyAxIDw9IDgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xpZ2h0SW5wdXQnICsgKGluZCArIDEpKS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xpZ2h0RGVzY3JpcHRpb24nICsgKGluZCArIDEpKS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTb2x2ZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIExvYWRlZCBmaW5lXHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xpZ2h0VGlwJyArIGluZCkuaW5uZXJUZXh0ID0gXCJDb3VsZG4ndCBwcm9jZXNzIHRoZSBpbWFnZSwgdHJ5IGFnYWluIHdpdGggYSBuZXcgc2NyZWVuc2hvdFwiO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBpbWcuc3JjID0gZXZlbnQudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGV2ZW50LnRhcmdldC5maWxlc1swXSk7XHJcbiAgICB9KTtcclxuXHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gVG9wUmlnaHRDb3JuZXIoc3JjKSB7XHJcbiAgICBmb3IgKGxldCB4ID0gc3JjLnNpemUoKS53aWR0aC0xOyB4ID4gMDsgeC0tKSB7XHJcbiAgICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCBzcmMuc2l6ZSgpLmhlaWdodC0xOyB5KyspIHtcclxuICAgICAgICAgICAgbGV0IHJnYmEgPSBzcmMudWNoYXJQdHIoeSwgeCk7XHJcbiAgICAgICAgICAgIGlmIChyZ2JhWzBdID09IDEzNiAmJiByZ2JhWzFdID09IDEzNiAmJiByZ2JhWzJdID09IDEyMikge1xyXG4gICAgICAgICAgICAgICAgeS0tO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coeyB4LCB5IH0pO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmdiYSk7XHJcbiAgICAgICAgICAgICAgICByZ2JhID0gc3JjLnVjaGFyUHRyKHksIHgpO1xyXG4gICAgICAgICAgICAgICAgd2hpbGUgKHJnYmFbMF0gPT0gMCAmJiByZ2JhWzFdID09IDAgJiYgcmdiYVsyXSA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeS0tO1xyXG4gICAgICAgICAgICAgICAgICAgIHJnYmEgPSBzcmMudWNoYXJQdHIoeSwgeCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB5Kys7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyB4LCB5IH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEdldFRpbGVTaXplKHNyYywgcG9zKSB7XHJcbiAgICBsZXQgaSA9IDA7XHJcbiAgICBsZXQgcmdiYSA9IHNyYy51Y2hhclB0cihwb3MueSwgcG9zLngpO1xyXG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhyZ2JhKTtcclxuICAgIHdoaWxlIChpIDwgNSB8fCAocmdiYVswXSAhPSAwIHx8IHJnYmFbMV0gIT0gMCB8fCByZ2JhWzJdICE9IDEpKSB7XHJcbiAgICAgICAgaSsrO1xyXG4gICAgICAgIHBvcy54LS07XHJcbiAgICAgICAgcG9zLnkrKztcclxuICAgICAgICByZ2JhID0gc3JjLnVjaGFyUHRyKHBvcy55LCBwb3MueCk7XHJcbiAgICB9XHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKFwiUGFzc2VkIHRvcCBib3R0b20gbGVmdCBjb3JuZXIgYXQ6IFwiKVxyXG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyh7IHg6IHBvcy54LCB5OiBwb3MueSB9KTtcclxuXHJcbiAgICB3aGlsZSAocmdiYVswXSA9PSAwICYmIHJnYmFbMV0gPT0gMCAmJiByZ2JhWzJdID09IDEpIHtcclxuICAgICAgICBpKys7XHJcbiAgICAgICAgcG9zLngtLTtcclxuICAgICAgICBwb3MueSsrO1xyXG4gICAgICAgIHJnYmEgPSBzcmMudWNoYXJQdHIocG9zLnksIHBvcy54KTtcclxuICAgIH1cclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJQb3NpdGlvbiBhZnRlciBibGFja3NcIilcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coeyB4OiBwb3MueCwgeTogcG9zLnkgfSk7XHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKHJnYmEpO1xyXG5cclxuICAgIGxldCBrID0gMDtcclxuICAgIHdoaWxlIChyZ2JhWzBdICE9IDAgJiYgcmdiYVsxXSAhPSAwICYmIHJnYmFbMl0gIT0gMSkge1xyXG4gICAgICAgIGsrKztcclxuICAgICAgICBwb3MueC0tO1xyXG4gICAgICAgIHBvcy55Kys7XHJcbiAgICAgICAgcmdiYSA9IHNyYy51Y2hhclB0cihwb3MueSwgcG9zLngpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJQb3NpdGlvbiBhZnRlciBjb2xvcmVkXCIpXHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKHsgeDogcG9zLngsIHk6IHBvcy55IH0pO1xyXG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhyZ2JhKTtcclxuXHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKFwiazogXCIgKyBrKTtcclxuICAgIGkgKz0gaztcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJpOiBcIiArIGkpO1xyXG5cclxuICAgIHJldHVybiB7IGksIGs6IGsvMiB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBJc09uKHNyYywgc2l6ZSkge1xyXG4gICAgbGV0IHJnYmEgPSBzcmMudWNoYXJQdHIoTWF0aC5mbG9vcihzaXplIC8gMiksIE1hdGguZmxvb3Ioc2l6ZSAvIDIpKTtcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2cocmdiYSk7XHJcbiAgICBpZiAocmdiYVswXSA8IDYwICYmIHJnYmFbMV0gPCA2MClcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIHJldHVybiAxO1xyXG59XHJcblxyXG52YXIgeG9yX21hdHJpeCA9IGZ1bmN0aW9uIChtMSwgbTIpIHtcclxuICAgIHJldHVybiByYW5nZSgwLCA1KS5tYXAoZnVuY3Rpb24gKHIpIHtcclxuICAgICAgICByZXR1cm4gcmFuZ2UoMCwgNSkubWFwKGZ1bmN0aW9uIChjKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBtMVtyXVtjXSBeIG0yW3JdW2NdXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJhbmdlKHN0YXJ0LCBlbmQpIHtcclxuICAgIGlmIChzdGFydCA9PT0gZW5kKSByZXR1cm4gW3N0YXJ0XTtcclxuICAgIHJldHVybiBbc3RhcnQsIC4uLnJhbmdlKHN0YXJ0ICsgMSwgZW5kKV07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzRXF1YWwoYSwgYikge1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspXHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCA1OyBqKyspXHJcbiAgICAgICAgICAgIGlmIChhW2ldW2pdICE9IGJbaV1bal0pIHJldHVybiBmYWxzZVxyXG4gICAgcmV0dXJuIHRydWVcclxufVxyXG5cclxuZnVuY3Rpb24gU29sdmUoKSB7XHJcbiAgICBsZXQgY2hhcnMgPSBbJ0EnLCAnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCddXHJcbiAgICBsZXQgb25lX21hdHJpeCA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHJhbmdlKDEsIDYpLm1hcChmdW5jdGlvbiAocikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmFuZ2UoMSwgNikubWFwKGZ1bmN0aW9uIChjKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pKCk7XHJcbiAgICBsZXQgZGF0YSA9IHt9XHJcbiAgICBsZXQgbGFzdF9zdGF0ZTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1hdHJpY2VzLmxlbmd0aC0xOyBpKyspIHtcclxuICAgICAgICBsYXN0X3N0YXRlID0gbWF0cmljZXNbaV07XHJcbiAgICAgICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhsYXN0X3N0YXRlKTtcclxuICAgICAgICBkYXRhW2NoYXJzW2ldXSA9IHhvcl9tYXRyaXgobGFzdF9zdGF0ZSwgbWF0cmljZXNbaSsxXSlcclxuICAgIH1cclxuICAgIGxhc3Rfc3RhdGUgPSBtYXRyaWNlc1ttYXRyaWNlcy5sZW5ndGgtMV07XHJcblxyXG4gICAgbGV0IGNvbWJvcyA9IFsnQScsICdCQScsICdCJywgJ0NBJywgJ0NCQScsICdDQicsICdDJywgJ0RBJywgJ0RCQScsICdEQicsICdEQ0EnLCAnRENCQScsICdEQ0InLCAnREMnLCAnRCcsICdFQScsICdFQkEnLCAnRUInLCAnRUNBJywgJ0VDQkEnLCAnRUNCJywgJ0VDJywgJ0VEQScsICdFREJBJywgJ0VEQicsICdFRENBJywgJ0VEQ0JBJywgJ0VEQ0InLCAnRURDJywgJ0VEJywgJ0UnLCAnRkEnLCAnRkJBJywgJ0ZCJywgJ0ZDQScsICdGQ0JBJywgJ0ZDQicsICdGQycsICdGREEnLCAnRkRCQScsICdGREInLCAnRkRDQScsICdGRENCQScsICdGRENCJywgJ0ZEQycsICdGRCcsICdGRUEnLCAnRkVCQScsICdGRUInLCAnRkVDQScsICdGRUNCQScsICdGRUNCJywgJ0ZFQycsICdGRURBJywgJ0ZFREJBJywgJ0ZFREInLCAnRkVEQ0EnLCAnRkVEQ0JBJywgJ0ZFRENCJywgJ0ZFREMnLCAnRkVEJywgJ0ZFJywgJ0YnLCAnR0EnLCAnR0JBJywgJ0dCJywgJ0dDQScsICdHQ0JBJywgJ0dDQicsICdHQycsICdHREEnLCAnR0RCQScsICdHREInLCAnR0RDQScsICdHRENCQScsICdHRENCJywgJ0dEQycsICdHRCcsICdHRUEnLCAnR0VCQScsICdHRUInLCAnR0VDQScsICdHRUNCQScsICdHRUNCJywgJ0dFQycsICdHRURBJywgJ0dFREJBJywgJ0dFREInLCAnR0VEQ0EnLCAnR0VEQ0JBJywgJ0dFRENCJywgJ0dFREMnLCAnR0VEJywgJ0dFJywgJ0dGQScsICdHRkJBJywgJ0dGQicsICdHRkNBJywgJ0dGQ0JBJywgJ0dGQ0InLCAnR0ZDJywgJ0dGREEnLCAnR0ZEQkEnLCAnR0ZEQicsICdHRkRDQScsICdHRkRDQkEnLCAnR0ZEQ0InLCAnR0ZEQycsICdHRkQnLCAnR0ZFQScsICdHRkVCQScsICdHRkVCJywgJ0dGRUNBJywgJ0dGRUNCQScsICdHRkVDQicsICdHRkVDJywgJ0dGRURBJywgJ0dGRURCQScsICdHRkVEQicsICdHRkVEQ0EnLCAnR0ZFRENCQScsICdHRkVEQ0InLCAnR0ZFREMnLCAnR0ZFRCcsICdHRkUnLCAnR0YnLCAnRycsICdIQScsICdIQkEnLCAnSEInLCAnSENBJywgJ0hDQkEnLCAnSENCJywgJ0hDJywgJ0hEQScsICdIREJBJywgJ0hEQicsICdIRENBJywgJ0hEQ0JBJywgJ0hEQ0InLCAnSERDJywgJ0hEJywgJ0hFQScsICdIRUJBJywgJ0hFQicsICdIRUNBJywgJ0hFQ0JBJywgJ0hFQ0InLCAnSEVDJywgJ0hFREEnLCAnSEVEQkEnLCAnSEVEQicsICdIRURDQScsICdIRURDQkEnLCAnSEVEQ0InLCAnSEVEQycsICdIRUQnLCAnSEUnLCAnSEZBJywgJ0hGQkEnLCAnSEZCJywgJ0hGQ0EnLCAnSEZDQkEnLCAnSEZDQicsICdIRkMnLCAnSEZEQScsICdIRkRCQScsICdIRkRCJywgJ0hGRENBJywgJ0hGRENCQScsICdIRkRDQicsICdIRkRDJywgJ0hGRCcsICdIRkVBJywgJ0hGRUJBJywgJ0hGRUInLCAnSEZFQ0EnLCAnSEZFQ0JBJywgJ0hGRUNCJywgJ0hGRUMnLCAnSEZFREEnLCAnSEZFREJBJywgJ0hGRURCJywgJ0hGRURDQScsICdIRkVEQ0JBJywgJ0hGRURDQicsICdIRkVEQycsICdIRkVEJywgJ0hGRScsICdIRicsICdIR0EnLCAnSEdCQScsICdIR0InLCAnSEdDQScsICdIR0NCQScsICdIR0NCJywgJ0hHQycsICdIR0RBJywgJ0hHREJBJywgJ0hHREInLCAnSEdEQ0EnLCAnSEdEQ0JBJywgJ0hHRENCJywgJ0hHREMnLCAnSEdEJywgJ0hHRUEnLCAnSEdFQkEnLCAnSEdFQicsICdIR0VDQScsICdIR0VDQkEnLCAnSEdFQ0InLCAnSEdFQycsICdIR0VEQScsICdIR0VEQkEnLCAnSEdFREInLCAnSEdFRENBJywgJ0hHRURDQkEnLCAnSEdFRENCJywgJ0hHRURDJywgJ0hHRUQnLCAnSEdFJywgJ0hHRkEnLCAnSEdGQkEnLCAnSEdGQicsICdIR0ZDQScsICdIR0ZDQkEnLCAnSEdGQ0InLCAnSEdGQycsICdIR0ZEQScsICdIR0ZEQkEnLCAnSEdGREInLCAnSEdGRENBJywgJ0hHRkRDQkEnLCAnSEdGRENCJywgJ0hHRkRDJywgJ0hHRkQnLCAnSEdGRUEnLCAnSEdGRUJBJywgJ0hHRkVCJywgJ0hHRkVDQScsICdIR0ZFQ0JBJywgJ0hHRkVDQicsICdIR0ZFQycsICdIR0ZFREEnLCAnSEdGRURCQScsICdIR0ZFREInLCAnSEdGRURDQScsICdIR0ZFRENCQScsICdIR0ZFRENCJywgJ0hHRkVEQycsICdIR0ZFRCcsICdIR0ZFJywgJ0hHRicsICdIRycsICdIJywgJyddXHJcblxyXG4gICAgdmFyIHNvbHV0aW9uID0gY29tYm9zLmZpbmQoZnVuY3Rpb24gKGxldHRlcnMpIHtcclxuICAgICAgICB2YXIgbSA9IGxhc3Rfc3RhdGVcclxuICAgICAgICBsZXR0ZXJzLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XHJcbiAgICAgICAgICAgIG0gPSB4b3JfbWF0cml4KG0sIGRhdGFbbF0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXR1cm4gaXNFcXVhbChtLCBvbmVfbWF0cml4KVxyXG4gICAgfSlcclxuICAgIGlmIChzb2x1dGlvbiAhPSBcIlwiKVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdMaWdodFNvbHV0aW9uJykuaW5uZXJUZXh0ID0gXCJTb2x1dGlvbjogXCIgKyBzb2x1dGlvbjtcclxuICAgIGVsc2VcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnTGlnaHRTb2x1dGlvbicpLmlubmVyVGV4dCA9IFwiTm8gc29sdXRpb24gZm91bmRcIjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdMaWdodFNvbHV0aW9uJykuc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcbiAgICBjb25zb2xlLmxvZyhzb2x1dGlvbik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEdldE1hdHJpeChpbmQpIHtcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJjYW52YXMtbGItXCIgKyBpbmQpO1xyXG4gICAgbGV0IHNyYyA9IGN2LmltcmVhZCgnY2FudmFzLWxiLScgKyBpbmQpO1xyXG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhcInNyY1wiKTtcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coc3JjKTtcclxuXHJcbiAgICBsZXQgdG9wUmlnaHRDb3JuZXIgPSBUb3BSaWdodENvcm5lcihzcmMpO1xyXG5cclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJ0b3BSaWdodENvcm5lclwiKTtcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2codG9wUmlnaHRDb3JuZXIpO1xyXG5cclxuICAgIGxldCB0aWxlU2l6ZSA9IEdldFRpbGVTaXplKHNyYywgeyB4OiB0b3BSaWdodENvcm5lci54LCB5OiB0b3BSaWdodENvcm5lci55IH0pO1xyXG5cclxuICAgIHRvcFJpZ2h0Q29ybmVyLnggKz0gdGlsZVNpemUuaztcclxuICAgIHRvcFJpZ2h0Q29ybmVyLnkgLT0gdGlsZVNpemUuaztcclxuXHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKFwidG9wUmlnaHRDb3JuZXJcIik7XHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKHRvcFJpZ2h0Q29ybmVyKTtcclxuXHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKHRpbGVTaXplKTtcclxuXHJcbiAgICBsZXQgdG9wTGVmdENvcm5lck9mTGlnaHRzID0geyB4OiB0b3BSaWdodENvcm5lci54IC0gKHRpbGVTaXplLmkgKiA5KSwgeTogdG9wUmlnaHRDb3JuZXIueSB9O1xyXG5cclxuXHJcbiAgICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKFwidG9wTGVmdENvcm5lck9mTGlnaHRzXCIpO1xyXG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyh0b3BMZWZ0Q29ybmVyT2ZMaWdodHMpO1xyXG5cclxuICAgIGxldCBtYXRyaXggPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHkgPSB0b3BMZWZ0Q29ybmVyT2ZMaWdodHMueSArICh0aWxlU2l6ZS5pICogaSk7XHJcbiAgICAgICAgbGV0IHJvdyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgNjsgaysrKSB7XHJcbiAgICAgICAgICAgIGxldCB4ID0gdG9wTGVmdENvcm5lck9mTGlnaHRzLnggKyAodGlsZVNpemUuaSAqIGspO1xyXG4gICAgICAgICAgICBsZXQgcmVjdCA9IG5ldyBjdi5SZWN0KHgsIHksIHRpbGVTaXplLmksIHRpbGVTaXplLmkpO1xyXG4gICAgICAgICAgICBsZXQgaXNPbiA9IElzT24oc3JjLnJvaShyZWN0KSwgdGlsZVNpemUuaSk7XHJcbiAgICAgICAgICAgIHJvdy5wdXNoKGlzT24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBtYXRyaXgucHVzaChyb3cpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vY29uc29sZS5sb2coXCJtYXRyaXhcIik7XHJcbiAgICAvL2NvbnNvbGUubG9nKG1hdHJpeCk7XHJcblxyXG4gICAgbWF0cmljZXNbaW5kXSA9IG1hdHJpeDtcclxuICAgIHJldHVybiB0cnVlO1xyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/light.js\n");

/***/ }),

/***/ "./wwwroot/js/minescape/puzzle-async-solver.js":
/*!*****************************************************!*\
  !*** ./wwwroot/js/minescape/puzzle-async-solver.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet puzzleWorker = new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"wwwroot_js_minescape_puzzle-solver_worker_js-_f9a31\"), __webpack_require__.b));\n\nclass Puzzle {\n\n    static solve(tiles, emptyPos, partitions, dbs, timeout = 120000) {\n\n        return new Promise((resolve, reject) => {\n            let timeoutID;\n            if (timeout !== null) {\n                timeoutID = setTimeout(() => {\n\n                    puzzleWorker.terminate();\n                    puzzleWorker = new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"wwwroot_js_minescape_puzzle-solver_worker_js-_f9a30\"), __webpack_require__.b));\n\n                    console.error(`Time limit (${timeout / 1000} seconds) exceeded`);\n                }, timeout);\n            }\n\n            puzzleWorker.onmessage = e => {\n                if (timeoutID) clearTimeout(timeoutID);\n                resolve(e.data);\n            }\n\n            puzzleWorker.postMessage([tiles, emptyPos, partitions, dbs]);\n        });\n        \n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Puzzle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3dyb290L2pzL21pbmVzY2FwZS9wdXp6bGUtYXN5bmMtc29sdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxzQ0FBc0MsK0lBQXlDOztBQUUvRTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNEQUFzRCwrSUFBeUM7O0FBRS9GLGlEQUFpRCxnQkFBZ0I7QUFDakUsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwbGljYXRpb24xLy4vd3d3cm9vdC9qcy9taW5lc2NhcGUvcHV6emxlLWFzeW5jLXNvbHZlci5qcz85NmVlIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBwdXp6bGVXb3JrZXIgPSBuZXcgV29ya2VyKG5ldyBVUkwoJy4vcHV6emxlLXNvbHZlci53b3JrZXInLCBpbXBvcnQubWV0YS51cmwpKTtcblxuY2xhc3MgUHV6emxlIHtcblxuICAgIHN0YXRpYyBzb2x2ZSh0aWxlcywgZW1wdHlQb3MsIHBhcnRpdGlvbnMsIGRicywgdGltZW91dCA9IDEyMDAwMCkge1xuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBsZXQgdGltZW91dElEO1xuICAgICAgICAgICAgaWYgKHRpbWVvdXQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aW1lb3V0SUQgPSBzZXRUaW1lb3V0KCgpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICBwdXp6bGVXb3JrZXIudGVybWluYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHB1enpsZVdvcmtlciA9IG5ldyBXb3JrZXIobmV3IFVSTCgnLi9wdXp6bGUtc29sdmVyLndvcmtlcicsIGltcG9ydC5tZXRhLnVybCkpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFRpbWUgbGltaXQgKCR7dGltZW91dCAvIDEwMDB9IHNlY29uZHMpIGV4Y2VlZGVkYCk7XG4gICAgICAgICAgICAgICAgfSwgdGltZW91dCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHB1enpsZVdvcmtlci5vbm1lc3NhZ2UgPSBlID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGltZW91dElEKSBjbGVhclRpbWVvdXQodGltZW91dElEKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKGUuZGF0YSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHB1enpsZVdvcmtlci5wb3N0TWVzc2FnZShbdGlsZXMsIGVtcHR5UG9zLCBwYXJ0aXRpb25zLCBkYnNdKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHV6emxlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/puzzle-async-solver.js\n");

/***/ }),

/***/ "./wwwroot/js/minescape/puzzle.js":
/*!****************************************!*\
  !*** ./wwwroot/js/minescape/puzzle.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _puzzle_async_solver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./puzzle-async-solver */ \"./wwwroot/js/minescape/puzzle-async-solver.js\");\n\r\n\r\nconst canvas = document.getElementById('canvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\nlet debug = document.getElementById(\"PuzzleDebug\").checked;\r\n\r\ndocument.getElementById(\"PuzzleDebug\").addEventListener('change', function () {\r\n    debug = document.getElementById(\"PuzzleDebug\").checked;\r\n});\r\n\r\ndocument.getElementById(\"PuzzleInput\").addEventListener('change', function () {\r\n    readFile(this);\r\n});\r\n\r\ndocument.getElementById(\"PuzzleInputZone\").addEventListener('dragover', function (e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.classList.add('dragover');\r\n});\r\n\r\ndocument.getElementById(\"PuzzleInputZone\").addEventListener('dragleave', function (e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.classList.remove('dragover');\r\n});\r\n\r\nfunction readFile(input) {\r\n    if (debug) console.log(input.files);\r\n    if (input.files && input.files[0]) {\r\n        document.getElementById(\"PuzzleInputZone\").classList.remove('dragover');\r\n        document.getElementById(\"PuzzleInputDescription\").innerText = \"Got another puzzle? Choose or drag it here\";\r\n        document.getElementById(\"PuzzleInputDescription\").style.textAlign = \"right\";\r\n        document.getElementById(\"PuzzleInputDescription\").style.paddingRight = \"5px\";\r\n\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = function (event) {\r\n            const img = new Image();\r\n            img.onload = function () {\r\n                let puzzleCanvas = document.getElementById(\"PuzzleCanvas\");\r\n                puzzleCanvas.width = img.width;\r\n                puzzleCanvas.height = img.height;\r\n                document.getElementById(\"PuzzleInputZone\").style.height = `${img.height + 6}px`;\r\n                \r\n                let obj = puzzleCanvas.getContext('2d');\r\n                obj.drawImage(img, 0, 0);\r\n\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                Solve();\r\n            };\r\n            img.src = event.target.result;\r\n        };\r\n        reader.readAsDataURL(input.files[0]);\r\n    }\r\n}\r\n\r\nclass PartitionData {\r\n    constructor(tiles) {\r\n        this.dbs = [];\r\n        this.partitions = [];\r\n        this.numTiles = 16;\r\n        this._loadDatabase();\r\n    }\r\n\r\n    async _loadDatabase() {\r\n        let response = await fetch(`../Data/15/info.json`);\r\n        let json;\r\n        if (response.ok) {\r\n            json = await response.json();\r\n        } else {\r\n            throw new Error('Database info json could not be loaded');\r\n        }\r\n\r\n        let promises = [];\r\n\r\n        for (let partition of json['partitions']) {\r\n            let fileName = `15_`\r\n                + partition.join(',')\r\n                + '.db';\r\n\r\n            promises.push(fetch(`../Data/15/${fileName}`)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.arrayBuffer();\r\n                    } else {\r\n                        throw new Error('Database could not be loaded');\r\n                    }\r\n                }).then(buffer => {\r\n                    this.partitions.push(partition);\r\n\r\n                    this.dbs.push(buffer);\r\n                }));\r\n        }\r\n\r\n        await Promise.all(promises);\r\n\r\n    }\r\n}\r\n\r\nvar partitionData = new PartitionData();\r\n\r\nfunction Solve() {\r\n    let src = cv.imread('canvas');\r\n\r\n    let sTopLeftPos = SolvedTopLeftCorner(src);\r\n\r\n    if (sTopLeftPos == undefined) {\r\n        document.getElementById('solution').innerText = \"Bad image. Include a picture that contains Unsolved and Solved puzzle\";\r\n        return;\r\n    }\r\n\r\n    let tileSize = GetTileSize(src, { x: sTopLeftPos.x, y: sTopLeftPos.y });\r\n\r\n    if (tileSize == undefined) {\r\n        document.getElementById('solution').innerText = \"Bad image. Include a picture that contains Unsolved and Solved puzzle\";\r\n        return;\r\n    }\r\n\r\n    if (debug) console.log(tileSize);\r\n\r\n    let uTopLeftPos = { x: (sTopLeftPos.x - (tileSize * 5)), y: sTopLeftPos.y }\r\n\r\n    let solvedTiles = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        let y = sTopLeftPos.y + (i * tileSize);\r\n        for (let k = 0; k < 4; k++) {\r\n            let x = sTopLeftPos.x +(k * tileSize);\r\n            let rect = new cv.Rect(x, y, tileSize, tileSize);\r\n            solvedTiles.push(src.roi(rect));\r\n            if (debug)\r\n                cv.imshow(`scanvas${i}-${k}`, src.roi(rect));\r\n        }\r\n    }\r\n\r\n    let unsolvedTiles = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        let y = uTopLeftPos.y + (i * tileSize);\r\n        for (let k = 0; k < 4; k++) {\r\n            let x = uTopLeftPos.x + (k * tileSize);\r\n            let rect = new cv.Rect(x, y, tileSize, tileSize);\r\n            let pos = FindPos(solvedTiles, src.roi(rect));\r\n            unsolvedTiles.push(pos == null ? 15 : pos);\r\n            if (debug)\r\n                cv.imshow(`canvas${i}-${k}`, src.roi(rect));\r\n        }\r\n    }\r\n    src.delete();\r\n\r\n    const goalState = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n    const initialState = unsolvedTiles;\r\n\r\n    if (debug) console.log(initialState);\r\n    let sum = 0;\r\n    for (const num of initialState) {\r\n        sum += num;\r\n    }\r\n    for (const num of goalState) {\r\n        sum -= num;\r\n    }\r\n\r\n    if (sum != 0) {\r\n        document.getElementById('solution').innerText = \"Bad image. Include a picture that contains Unsolved and Solved puzzle\";\r\n        return;\r\n    }\r\n\r\n    \r\n    _puzzle_async_solver__WEBPACK_IMPORTED_MODULE_0__[\"default\"].solve(\r\n        initialState,\r\n        initialState.indexOf(15),\r\n        partitionData.partitions,\r\n        partitionData.dbs\r\n    ).then(ans => {\r\n        document.getElementById('solution').innerText = \"Solution: \\n\\n\" + ans + \"\\n\\nInstructions: \\n\\nu - tile goes up\\nd - tile goes down\\nr - tile goes right\\nl - tile goes left\";\r\n    }).catch(e => {\r\n        if (debug) console.error(e.message);\r\n    });\r\n}\r\n\r\nfunction SolvedTopLeftCorner(src) {\r\n    for (let x = src.size().width / 2; x <= src.size().width; x++) {\r\n        for (let y = 0; y < src.size().height; y++) {\r\n            let rgba = src.ucharPtr(y, x);\r\n            if (rgba[0] == 0 && rgba[1] == 0 && rgba[2] == 0)\r\n                return { x, y };\r\n        }\r\n    }\r\n}\r\n\r\nfunction GetTileSize(src, pos) {\r\n    try {\r\n        let i = 0;\r\n        let rgba = src.ucharPtr(pos.y, pos.x);\r\n        while (i < 5 || (rgba[0] != 0 || rgba[1] != 0 || rgba[2] != 0)) {\r\n            i++;\r\n            pos.x++;\r\n            pos.y++;\r\n            rgba = src.ucharPtr(pos.y, pos.x);\r\n        }\r\n\r\n        let k = 0;\r\n        while (rgba[0] == 0 && rgba[1] == 0 && rgba[2] == 0) {\r\n            k++;\r\n            pos.x++;\r\n            pos.y++;\r\n            rgba = src.ucharPtr(pos.y, pos.x);\r\n        }\r\n        k = Math.floor(k / 2);\r\n        return i + k;\r\n    }\r\n    catch {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nfunction CompareMats(mat1, mat2) {\r\n    if (mat1.rows !== mat2.rows || mat1.cols !== mat2.cols) {\r\n        if (debug) console.error(\"Dimensions of the Mats are different.\");\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < mat1.rows; i++) {\r\n        for (let j = 0; j < mat1.cols; j++) {\r\n            let pixel1 = mat1.ucharPtr(j, i);\r\n            let pixel2 = mat2.ucharPtr(j, i);\r\n            if (pixel1[0] != pixel2[0] || pixel1[1] != pixel2[1] || pixel1[2] != pixel2[2]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction FindPos(solvedTiles, mat2) {\r\n    let found = null;\r\n    solvedTiles.forEach(function (val, index) {\r\n        if (CompareMats(val, mat2))\r\n            found = index;\r\n    });\r\n    return found;\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93d3dyb290L2pzL21pbmVzY2FwZS9wdXp6bGUuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsZUFBZTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFNBQVM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG9DQUFvQztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBLHdCQUF3QixPQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLEVBQUUsR0FBRyxFQUFFO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLEVBQUUsR0FBRyxFQUFFO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw0REFBTTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsdUJBQXVCO0FBQzlELHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQyx3QkFBd0IsZUFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXBwbGljYXRpb24xLy4vd3d3cm9vdC9qcy9taW5lc2NhcGUvcHV6emxlLmpzPzdhODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFB1enpsZSBmcm9tICcuL3B1enpsZS1hc3luYy1zb2x2ZXInXHJcblxyXG5jb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJyk7XHJcbmNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG5cclxubGV0IGRlYnVnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQdXp6bGVEZWJ1Z1wiKS5jaGVja2VkO1xyXG5cclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQdXp6bGVEZWJ1Z1wiKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBkZWJ1ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUHV6emxlRGVidWdcIikuY2hlY2tlZDtcclxufSk7XHJcblxyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlB1enpsZUlucHV0XCIpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgIHJlYWRGaWxlKHRoaXMpO1xyXG59KTtcclxuXHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUHV6emxlSW5wdXRab25lXCIpLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdvdmVyJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2RyYWdvdmVyJyk7XHJcbn0pO1xyXG5cclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQdXp6bGVJbnB1dFpvbmVcIikuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2RyYWdvdmVyJyk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gcmVhZEZpbGUoaW5wdXQpIHtcclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coaW5wdXQuZmlsZXMpO1xyXG4gICAgaWYgKGlucHV0LmZpbGVzICYmIGlucHV0LmZpbGVzWzBdKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQdXp6bGVJbnB1dFpvbmVcIikuY2xhc3NMaXN0LnJlbW92ZSgnZHJhZ292ZXInKTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlB1enpsZUlucHV0RGVzY3JpcHRpb25cIikuaW5uZXJUZXh0ID0gXCJHb3QgYW5vdGhlciBwdXp6bGU/IENob29zZSBvciBkcmFnIGl0IGhlcmVcIjtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlB1enpsZUlucHV0RGVzY3JpcHRpb25cIikuc3R5bGUudGV4dEFsaWduID0gXCJyaWdodFwiO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUHV6emxlSW5wdXREZXNjcmlwdGlvblwiKS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBcIjVweFwiO1xyXG5cclxuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuXHJcbiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGxldCBwdXp6bGVDYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlB1enpsZUNhbnZhc1wiKTtcclxuICAgICAgICAgICAgICAgIHB1enpsZUNhbnZhcy53aWR0aCA9IGltZy53aWR0aDtcclxuICAgICAgICAgICAgICAgIHB1enpsZUNhbnZhcy5oZWlnaHQgPSBpbWcuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQdXp6bGVJbnB1dFpvbmVcIikuc3R5bGUuaGVpZ2h0ID0gYCR7aW1nLmhlaWdodCArIDZ9cHhgO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBsZXQgb2JqID0gcHV6emxlQ2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbiAgICAgICAgICAgICAgICBvYmouZHJhd0ltYWdlKGltZywgMCwgMCk7XHJcblxyXG4gICAgICAgICAgICAgICAgY2FudmFzLndpZHRoID0gaW1nLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IGltZy5oZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCk7XHJcblxyXG4gICAgICAgICAgICAgICAgU29sdmUoKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgaW1nLnNyYyA9IGV2ZW50LnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1swXSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFBhcnRpdGlvbkRhdGEge1xyXG4gICAgY29uc3RydWN0b3IodGlsZXMpIHtcclxuICAgICAgICB0aGlzLmRicyA9IFtdO1xyXG4gICAgICAgIHRoaXMucGFydGl0aW9ucyA9IFtdO1xyXG4gICAgICAgIHRoaXMubnVtVGlsZXMgPSAxNjtcclxuICAgICAgICB0aGlzLl9sb2FkRGF0YWJhc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBfbG9hZERhdGFiYXNlKCkge1xyXG4gICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAuLi9EYXRhLzE1L2luZm8uanNvbmApO1xyXG4gICAgICAgIGxldCBqc29uO1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YWJhc2UgaW5mbyBqc29uIGNvdWxkIG5vdCBiZSBsb2FkZWQnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBwcm9taXNlcyA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBwYXJ0aXRpb24gb2YganNvblsncGFydGl0aW9ucyddKSB7XHJcbiAgICAgICAgICAgIGxldCBmaWxlTmFtZSA9IGAxNV9gXHJcbiAgICAgICAgICAgICAgICArIHBhcnRpdGlvbi5qb2luKCcsJylcclxuICAgICAgICAgICAgICAgICsgJy5kYic7XHJcblxyXG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKGZldGNoKGAuLi9EYXRhLzE1LyR7ZmlsZU5hbWV9YClcclxuICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmFycmF5QnVmZmVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBjb3VsZCBub3QgYmUgbG9hZGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSkudGhlbihidWZmZXIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFydGl0aW9ucy5wdXNoKHBhcnRpdGlvbik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGJzLnB1c2goYnVmZmVyKTtcclxuICAgICAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbnZhciBwYXJ0aXRpb25EYXRhID0gbmV3IFBhcnRpdGlvbkRhdGEoKTtcclxuXHJcbmZ1bmN0aW9uIFNvbHZlKCkge1xyXG4gICAgbGV0IHNyYyA9IGN2LmltcmVhZCgnY2FudmFzJyk7XHJcblxyXG4gICAgbGV0IHNUb3BMZWZ0UG9zID0gU29sdmVkVG9wTGVmdENvcm5lcihzcmMpO1xyXG5cclxuICAgIGlmIChzVG9wTGVmdFBvcyA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc29sdXRpb24nKS5pbm5lclRleHQgPSBcIkJhZCBpbWFnZS4gSW5jbHVkZSBhIHBpY3R1cmUgdGhhdCBjb250YWlucyBVbnNvbHZlZCBhbmQgU29sdmVkIHB1enpsZVwiO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgdGlsZVNpemUgPSBHZXRUaWxlU2l6ZShzcmMsIHsgeDogc1RvcExlZnRQb3MueCwgeTogc1RvcExlZnRQb3MueSB9KTtcclxuXHJcbiAgICBpZiAodGlsZVNpemUgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvbHV0aW9uJykuaW5uZXJUZXh0ID0gXCJCYWQgaW1hZ2UuIEluY2x1ZGUgYSBwaWN0dXJlIHRoYXQgY29udGFpbnMgVW5zb2x2ZWQgYW5kIFNvbHZlZCBwdXp6bGVcIjtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyh0aWxlU2l6ZSk7XHJcblxyXG4gICAgbGV0IHVUb3BMZWZ0UG9zID0geyB4OiAoc1RvcExlZnRQb3MueCAtICh0aWxlU2l6ZSAqIDUpKSwgeTogc1RvcExlZnRQb3MueSB9XHJcblxyXG4gICAgbGV0IHNvbHZlZFRpbGVzID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xyXG4gICAgICAgIGxldCB5ID0gc1RvcExlZnRQb3MueSArIChpICogdGlsZVNpemUpO1xyXG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgNDsgaysrKSB7XHJcbiAgICAgICAgICAgIGxldCB4ID0gc1RvcExlZnRQb3MueCArKGsgKiB0aWxlU2l6ZSk7XHJcbiAgICAgICAgICAgIGxldCByZWN0ID0gbmV3IGN2LlJlY3QoeCwgeSwgdGlsZVNpemUsIHRpbGVTaXplKTtcclxuICAgICAgICAgICAgc29sdmVkVGlsZXMucHVzaChzcmMucm9pKHJlY3QpKTtcclxuICAgICAgICAgICAgaWYgKGRlYnVnKVxyXG4gICAgICAgICAgICAgICAgY3YuaW1zaG93KGBzY2FudmFzJHtpfS0ke2t9YCwgc3JjLnJvaShyZWN0KSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGxldCB1bnNvbHZlZFRpbGVzID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xyXG4gICAgICAgIGxldCB5ID0gdVRvcExlZnRQb3MueSArIChpICogdGlsZVNpemUpO1xyXG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgNDsgaysrKSB7XHJcbiAgICAgICAgICAgIGxldCB4ID0gdVRvcExlZnRQb3MueCArIChrICogdGlsZVNpemUpO1xyXG4gICAgICAgICAgICBsZXQgcmVjdCA9IG5ldyBjdi5SZWN0KHgsIHksIHRpbGVTaXplLCB0aWxlU2l6ZSk7XHJcbiAgICAgICAgICAgIGxldCBwb3MgPSBGaW5kUG9zKHNvbHZlZFRpbGVzLCBzcmMucm9pKHJlY3QpKTtcclxuICAgICAgICAgICAgdW5zb2x2ZWRUaWxlcy5wdXNoKHBvcyA9PSBudWxsID8gMTUgOiBwb3MpO1xyXG4gICAgICAgICAgICBpZiAoZGVidWcpXHJcbiAgICAgICAgICAgICAgICBjdi5pbXNob3coYGNhbnZhcyR7aX0tJHtrfWAsIHNyYy5yb2kocmVjdCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNyYy5kZWxldGUoKTtcclxuXHJcbiAgICBjb25zdCBnb2FsU3RhdGUgPSBbMCwgMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTAsIDExLCAxMiwgMTMsIDE0LCAxNV07XHJcbiAgICBjb25zdCBpbml0aWFsU3RhdGUgPSB1bnNvbHZlZFRpbGVzO1xyXG5cclxuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coaW5pdGlhbFN0YXRlKTtcclxuICAgIGxldCBzdW0gPSAwO1xyXG4gICAgZm9yIChjb25zdCBudW0gb2YgaW5pdGlhbFN0YXRlKSB7XHJcbiAgICAgICAgc3VtICs9IG51bTtcclxuICAgIH1cclxuICAgIGZvciAoY29uc3QgbnVtIG9mIGdvYWxTdGF0ZSkge1xyXG4gICAgICAgIHN1bSAtPSBudW07XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHN1bSAhPSAwKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvbHV0aW9uJykuaW5uZXJUZXh0ID0gXCJCYWQgaW1hZ2UuIEluY2x1ZGUgYSBwaWN0dXJlIHRoYXQgY29udGFpbnMgVW5zb2x2ZWQgYW5kIFNvbHZlZCBwdXp6bGVcIjtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgICBQdXp6bGUuc29sdmUoXHJcbiAgICAgICAgaW5pdGlhbFN0YXRlLFxyXG4gICAgICAgIGluaXRpYWxTdGF0ZS5pbmRleE9mKDE1KSxcclxuICAgICAgICBwYXJ0aXRpb25EYXRhLnBhcnRpdGlvbnMsXHJcbiAgICAgICAgcGFydGl0aW9uRGF0YS5kYnNcclxuICAgICkudGhlbihhbnMgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzb2x1dGlvbicpLmlubmVyVGV4dCA9IFwiU29sdXRpb246IFxcblxcblwiICsgYW5zICsgXCJcXG5cXG5JbnN0cnVjdGlvbnM6IFxcblxcbnUgLSB0aWxlIGdvZXMgdXBcXG5kIC0gdGlsZSBnb2VzIGRvd25cXG5yIC0gdGlsZSBnb2VzIHJpZ2h0XFxubCAtIHRpbGUgZ29lcyBsZWZ0XCI7XHJcbiAgICB9KS5jYXRjaChlID0+IHtcclxuICAgICAgICBpZiAoZGVidWcpIGNvbnNvbGUuZXJyb3IoZS5tZXNzYWdlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBTb2x2ZWRUb3BMZWZ0Q29ybmVyKHNyYykge1xyXG4gICAgZm9yIChsZXQgeCA9IHNyYy5zaXplKCkud2lkdGggLyAyOyB4IDw9IHNyYy5zaXplKCkud2lkdGg7IHgrKykge1xyXG4gICAgICAgIGZvciAobGV0IHkgPSAwOyB5IDwgc3JjLnNpemUoKS5oZWlnaHQ7IHkrKykge1xyXG4gICAgICAgICAgICBsZXQgcmdiYSA9IHNyYy51Y2hhclB0cih5LCB4KTtcclxuICAgICAgICAgICAgaWYgKHJnYmFbMF0gPT0gMCAmJiByZ2JhWzFdID09IDAgJiYgcmdiYVsyXSA9PSAwKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgeCwgeSB9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gR2V0VGlsZVNpemUoc3JjLCBwb3MpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgbGV0IGkgPSAwO1xyXG4gICAgICAgIGxldCByZ2JhID0gc3JjLnVjaGFyUHRyKHBvcy55LCBwb3MueCk7XHJcbiAgICAgICAgd2hpbGUgKGkgPCA1IHx8IChyZ2JhWzBdICE9IDAgfHwgcmdiYVsxXSAhPSAwIHx8IHJnYmFbMl0gIT0gMCkpIHtcclxuICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICBwb3MueCsrO1xyXG4gICAgICAgICAgICBwb3MueSsrO1xyXG4gICAgICAgICAgICByZ2JhID0gc3JjLnVjaGFyUHRyKHBvcy55LCBwb3MueCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgayA9IDA7XHJcbiAgICAgICAgd2hpbGUgKHJnYmFbMF0gPT0gMCAmJiByZ2JhWzFdID09IDAgJiYgcmdiYVsyXSA9PSAwKSB7XHJcbiAgICAgICAgICAgIGsrKztcclxuICAgICAgICAgICAgcG9zLngrKztcclxuICAgICAgICAgICAgcG9zLnkrKztcclxuICAgICAgICAgICAgcmdiYSA9IHNyYy51Y2hhclB0cihwb3MueSwgcG9zLngpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBrID0gTWF0aC5mbG9vcihrIC8gMik7XHJcbiAgICAgICAgcmV0dXJuIGkgKyBrO1xyXG4gICAgfVxyXG4gICAgY2F0Y2gge1xyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIENvbXBhcmVNYXRzKG1hdDEsIG1hdDIpIHtcclxuICAgIGlmIChtYXQxLnJvd3MgIT09IG1hdDIucm93cyB8fCBtYXQxLmNvbHMgIT09IG1hdDIuY29scykge1xyXG4gICAgICAgIGlmIChkZWJ1ZykgY29uc29sZS5lcnJvcihcIkRpbWVuc2lvbnMgb2YgdGhlIE1hdHMgYXJlIGRpZmZlcmVudC5cIik7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF0MS5yb3dzOyBpKyspIHtcclxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IG1hdDEuY29sczsgaisrKSB7XHJcbiAgICAgICAgICAgIGxldCBwaXhlbDEgPSBtYXQxLnVjaGFyUHRyKGosIGkpO1xyXG4gICAgICAgICAgICBsZXQgcGl4ZWwyID0gbWF0Mi51Y2hhclB0cihqLCBpKTtcclxuICAgICAgICAgICAgaWYgKHBpeGVsMVswXSAhPSBwaXhlbDJbMF0gfHwgcGl4ZWwxWzFdICE9IHBpeGVsMlsxXSB8fCBwaXhlbDFbMl0gIT0gcGl4ZWwyWzJdKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEZpbmRQb3Moc29sdmVkVGlsZXMsIG1hdDIpIHtcclxuICAgIGxldCBmb3VuZCA9IG51bGw7XHJcbiAgICBzb2x2ZWRUaWxlcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWwsIGluZGV4KSB7XHJcbiAgICAgICAgaWYgKENvbXBhcmVNYXRzKHZhbCwgbWF0MikpXHJcbiAgICAgICAgICAgIGZvdW5kID0gaW5kZXg7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmb3VuZDtcclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./wwwroot/js/minescape/puzzle.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".minescape-solvers.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./wwwroot/js/minescape/puzzle.js");
/******/ 	__webpack_require__("./wwwroot/js/minescape/light.js");
/******/ 	__webpack_require__("./wwwroot/js/minescape/cypher.js");
/******/ 	__webpack_require__("./wwwroot/js/minescape/anagram.js");
/******/ 	__webpack_require__("./wwwroot/js/minescape/chest.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./wwwroot/js/minescape/beacon.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=minescape-solvers.js.map