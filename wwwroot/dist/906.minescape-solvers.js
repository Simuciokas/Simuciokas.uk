(()=>{var __webpack_modules__={219:module=>{"use strict";eval("\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE5LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaW11Y2lva2FzdWsvLi9ub2RlX21vZHVsZXMvaW90YS1hcnJheS9pb3RhLmpzPzIwMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcblxuZnVuY3Rpb24gaW90YShuKSB7XG4gIHZhciByZXN1bHQgPSBuZXcgQXJyYXkobilcbiAgZm9yKHZhciBpPTA7IGk8bjsgKytpKSB7XG4gICAgcmVzdWx0W2ldID0gaVxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpb3RhIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///219\n")},206:module=>{eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA2LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbXVjaW9rYXN1ay8uL25vZGVfbW9kdWxlcy9pcy1idWZmZXIvaW5kZXguanM/MDQ0YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIERldGVybWluZSBpZiBhbiBvYmplY3QgaXMgYSBCdWZmZXJcbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnPlxuICogQGxpY2Vuc2UgIE1JVFxuICovXG5cbi8vIFRoZSBfaXNCdWZmZXIgY2hlY2sgaXMgZm9yIFNhZmFyaSA1LTcgc3VwcG9ydCwgYmVjYXVzZSBpdCdzIG1pc3Npbmdcbi8vIE9iamVjdC5wcm90b3R5cGUuY29uc3RydWN0b3IuIFJlbW92ZSB0aGlzIGV2ZW50dWFsbHlcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICE9IG51bGwgJiYgKGlzQnVmZmVyKG9iaikgfHwgaXNTbG93QnVmZmVyKG9iaikgfHwgISFvYmouX2lzQnVmZmVyKVxufVxuXG5mdW5jdGlvbiBpc0J1ZmZlciAob2JqKSB7XG4gIHJldHVybiAhIW9iai5jb25zdHJ1Y3RvciAmJiB0eXBlb2Ygb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nICYmIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlcihvYmopXG59XG5cbi8vIEZvciBOb2RlIHYwLjEwIHN1cHBvcnQuIFJlbW92ZSB0aGlzIGV2ZW50dWFsbHkuXG5mdW5jdGlvbiBpc1Nsb3dCdWZmZXIgKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iai5yZWFkRmxvYXRMRSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2Ygb2JqLnNsaWNlID09PSAnZnVuY3Rpb24nICYmIGlzQnVmZmVyKG9iai5zbGljZSgwLCAwKSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///206\n")},655:(module,__unused_webpack_exports,__webpack_require__)=>{eval('var iota = __webpack_require__(219)\nvar isBuffer = __webpack_require__(206)\n\nvar hasTypedArrays  = ((typeof Float64Array) !== "undefined")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = ["View", dimension, "d", dtype].join("")\n  if(dimension < 0) {\n    className = "View_Nil" + dtype\n  }\n  var useGetters = (dtype === "generic")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      "function "+className+"(a){this.data=a;};\\\nvar proto="+className+".prototype;\\\nproto.dtype=\'"+dtype+"\';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new "+className+"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_"+className+"(a){return new "+className+"(a);}"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      "function "+className+"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto="+className+".prototype;\\\nproto.dtype=\'"+dtype+"\';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function "+className+"_copy() {\\\nreturn new "+className+"(this.data,this.offset)\\\n};\\\nproto.pick=function "+className+"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function "+className+"_get(){\\\nreturn "+(useGetters ? "this.data.get(this.offset)" : "this.data[this.offset]")+\n"};\\\nproto.set=function "+className+"_set(v){\\\nreturn "+(useGetters ? "this.data.set(this.offset,v)" : "this.data[this.offset]=v")+"\\\n};\\\nreturn function construct_"+className+"(a,b,c,d){return new "+className+"(a,d)}"\n    var procedure = new Function("TrivialArray", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = ["\'use strict\'"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return "i"+i })\n  var index_str = "this.offset+" + indices.map(function(i) {\n        return "this.stride[" + i + "]*i" + i\n      }).join("+")\n  var shapeArg = indices.map(function(i) {\n      return "b"+i\n    }).join(",")\n  var strideArg = indices.map(function(i) {\n      return "c"+i\n    }).join(",")\n  code.push(\n    "function "+className+"(a," + shapeArg + "," + strideArg + ",d){this.data=a",\n      "this.shape=[" + shapeArg + "]",\n      "this.stride=[" + strideArg + "]",\n      "this.offset=d|0}",\n    "var proto="+className+".prototype",\n    "proto.dtype=\'"+dtype+"\'",\n    "proto.dimension="+dimension)\n\n  //view.size:\n  code.push("Object.defineProperty(proto,\'size\',{get:function "+className+"_size(){\\\nreturn "+indices.map(function(i) { return "this.shape["+i+"]" }).join("*"),\n"}})")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push("proto.order=[0]")\n  } else {\n    code.push("Object.defineProperty(proto,\'order\',{get:")\n    if(dimension < 4) {\n      code.push("function "+className+"_order(){")\n      if(dimension === 2) {\n        code.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})")\n      } else if(dimension === 3) {\n        code.push(\n"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})")\n      }\n    } else {\n      code.push("ORDER})")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n"proto.set=function "+className+"_set("+args.join(",")+",v){")\n  if(useGetters) {\n    code.push("return this.data.set("+index_str+",v)}")\n  } else {\n    code.push("return this.data["+index_str+"]=v}")\n  }\n\n  //view.get(i0, ...):\n  code.push("proto.get=function "+className+"_get("+args.join(",")+"){")\n  if(useGetters) {\n    code.push("return this.data.get("+index_str+")}")\n  } else {\n    code.push("return this.data["+index_str+"]}")\n  }\n\n  //view.index:\n  code.push(\n    "proto.index=function "+className+"_index(", args.join(), "){return "+index_str+"}")\n\n  //view.hi():\n  code.push("proto.hi=function "+className+"_hi("+args.join(",")+"){return new "+className+"(this.data,"+\n    indices.map(function(i) {\n      return ["(typeof i",i,"!==\'number\'||i",i,"<0)?this.shape[", i, "]:i", i,"|0"].join("")\n    }).join(",")+","+\n    indices.map(function(i) {\n      return "this.stride["+i + "]"\n    }).join(",")+",this.offset)}")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return "a"+i+"=this.shape["+i+"]" })\n  var c_vars = indices.map(function(i) { return "c"+i+"=this.stride["+i+"]" })\n  code.push("proto.lo=function "+className+"_lo("+args.join(",")+"){var b=this.offset,d=0,"+a_vars.join(",")+","+c_vars.join(","))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n"if(typeof i"+i+"===\'number\'&&i"+i+">=0){\\\nd=i"+i+"|0;\\\nb+=c"+i+"*d;\\\na"+i+"-=d}")\n  }\n  code.push("return new "+className+"(this.data,"+\n    indices.map(function(i) {\n      return "a"+i\n    }).join(",")+","+\n    indices.map(function(i) {\n      return "c"+i\n    }).join(",")+",b)}")\n\n  //view.step():\n  code.push("proto.step=function "+className+"_step("+args.join(",")+"){var "+\n    indices.map(function(i) {\n      return "a"+i+"=this.shape["+i+"]"\n    }).join(",")+","+\n    indices.map(function(i) {\n      return "b"+i+"=this.stride["+i+"]"\n    }).join(",")+",c=this.offset,d=0,ceil=Math.ceil")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n"if(typeof i"+i+"===\'number\'){\\\nd=i"+i+"|0;\\\nif(d<0){\\\nc+=b"+i+"*(a"+i+"-1);\\\na"+i+"=ceil(-a"+i+"/d)\\\n}else{\\\na"+i+"=ceil(a"+i+"/d)\\\n}\\\nb"+i+"*=d\\\n}")\n  }\n  code.push("return new "+className+"(this.data,"+\n    indices.map(function(i) {\n      return "a" + i\n    }).join(",")+","+\n    indices.map(function(i) {\n      return "b" + i\n    }).join(",")+",c)}")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = "a[i"+i+"]"\n    tStride[i] = "b[i"+i+"]"\n  }\n  code.push("proto.transpose=function "+className+"_transpose("+args+"){"+\n    args.map(function(n,idx) { return n + "=(" + n + "===undefined?" + idx + ":" + n + "|0)"}).join(";"),\n    "var a=this.shape,b=this.stride;return new "+className+"(this.data,"+tShape.join(",")+","+tStride.join(",")+",this.offset)}")\n\n  //view.pick():\n  code.push("proto.pick=function "+className+"_pick("+args+"){var a=[],b=[],c=this.offset")\n  for(var i=0; i<dimension; ++i) {\n    code.push("if(typeof i"+i+"===\'number\'&&i"+i+">=0){c=(c+this.stride["+i+"]*i"+i+")|0}else{a.push(this.shape["+i+"]);b.push(this.stride["+i+"])}")\n  }\n  code.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}")\n\n  //Add return statement\n  code.push("return function construct_"+className+"(data,shape,stride,offset){return new "+className+"(data,"+\n    indices.map(function(i) {\n      return "shape["+i+"]"\n    }).join(",")+","+\n    indices.map(function(i) {\n      return "stride["+i+"]"\n    }).join(",")+",offset)}")\n\n  //Compile procedure\n  var procedure = new Function("CTOR_LIST", "ORDER", code.join("\\n"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return "buffer"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case "[object Float64Array]":\n        return "float64"\n      case "[object Float32Array]":\n        return "float32"\n      case "[object Int8Array]":\n        return "int8"\n      case "[object Int16Array]":\n        return "int16"\n      case "[object Int32Array]":\n        return "int32"\n      case "[object Uint8Array]":\n        return "uint8"\n      case "[object Uint16Array]":\n        return "uint16"\n      case "[object Uint32Array]":\n        return "uint32"\n      case "[object Uint8ClampedArray]":\n        return "uint8_clamped"\n      case "[object BigInt64Array]":\n        return "bigint64"\n      case "[object BigUint64Array]":\n        return "biguint64"\n    }\n  }\n  if(Array.isArray(data)) {\n    return "array"\n  }\n  return "generic"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  "float32":[],\n  "float64":[],\n  "int8":[],\n  "int16":[],\n  "int32":[],\n  "uint8":[],\n  "uint16":[],\n  "uint32":[],\n  "array":[],\n  "uint8_clamped":[],\n  "bigint64": [],\n  "biguint64": [],\n  "buffer":[],\n  "generic":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === "number") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///655\n')},525:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/ndarray/ndarray.js\nvar ndarray = __webpack_require__(655);\nvar ndarray_default = /*#__PURE__*/__webpack_require__.n(ndarray);\n;// CONCATENATED MODULE: ./wwwroot/js/minescape/puzzle-algorithm.js\n\r\n\r\nconst REVERSE_MOVE_MAP = {\r\n    'r': 'l',\r\n    'l': 'r',\r\n    'd': 'u',\r\n    'u': 'd'\r\n}\r\n\r\nclass PatternDatabaseHeuristic {\r\n\r\n    constructor(grid) {\r\n        this.numRows = grid.numRows;\r\n        this.numCols = grid.numCols;\r\n        this.numTiles = grid.numRows * grid.numCols;\r\n        this.emptyPos = grid.tiles[grid.emptyPos];\r\n\r\n        this.partitions = grid.partitions;\r\n        let dbsNew = []\r\n        this.partitions.forEach((partition, index) => {\r\n            dbsNew.push(ndarray_default()(new Uint8Array(grid.dbs[index]), new Uint8Array(partition.length).fill(this.numTiles)));\r\n        });\r\n        this.dbs = dbsNew;\r\n\r\n        this.goalMap = new Uint8Array(this.numTiles);\r\n\r\n        grid.tiles.forEach((goalInd, ind) => {\r\n            this.goalMap[goalInd] = ind;\r\n        });\r\n    }\r\n\r\n    calculate(grid) {\r\n\r\n        let heuristicValue = 0;\r\n        this.partitions.forEach((partition, ind) => {\r\n            let indices = partition.map(goalInd => this.goalMap[goalInd]);\r\n            heuristicValue += this.dbs[ind].get(...indices);\r\n        });\r\n\r\n        return heuristicValue;\r\n    }\r\n\r\n    update(newGrid, startInd, endInd, move) {\r\n        this.goalMap[newGrid.tiles[endInd]] = endInd;\r\n        this.goalMap[newGrid.tiles[startInd]] = startInd;\r\n\r\n        return this.calculate(newGrid);\r\n    }\r\n\r\n    reverseUpdate(newGrid, {emptyPos: oldEmptyPos}) {\r\n        let goalInd = newGrid.tiles[oldEmptyPos];\r\n        let emptyGoalInd = newGrid.tiles[newGrid.emptyPos];\r\n\r\n        this.goalMap[goalInd] = newGrid.emptyPos;\r\n        this.goalMap[emptyGoalInd] = oldEmptyPos;\r\n    }\r\n\r\n    isSolved(heuristicValue) {\r\n        return heuristicValue === 0;\r\n    }\r\n}\r\n\r\nclass PuzzleSolver {\r\n    \r\n    constructor(tiles, emptyPos, partitions, dbs) {\r\n        this.numRows = 4;\r\n        this.numCols = 4;\r\n        this.tiles = Uint8Array.from(tiles);\r\n        this.emptyPos = emptyPos;\r\n        this.partitions = partitions;\r\n        this.dbs = dbs;\r\n        this.heuristic = new PatternDatabaseHeuristic(this);\r\n        this.solver = 'IDA*';\r\n    };\r\n\r\n    async solve(maxNodesExpanded = 1000000000) {\r\n\r\n        return this.solveIDAStar(maxNodesExpanded);\r\n    }\r\n\r\n    solveIDAStar(maxNodesExpanded) {\r\n        let grid = new Grid(this.numRows, this.numCols, this.tiles, this.emptyPos, this.heuristic);\r\n\r\n        let bound = grid.heuristicValue;\r\n        let path = [];\r\n\r\n        while (true) {\r\n            let output = this._searchIDAStar(grid, path, 0, bound);\r\n            if (output === true) {\r\n                return path;\r\n            } else if (output === Infinity) {\r\n                return null;\r\n            }\r\n            bound = output;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _searchIDAStar(grid, path, traveledDist, bound) {\r\n\r\n        let totalDist = traveledDist + grid.heuristicValue;\r\n\r\n        if (totalDist > bound) return totalDist;\r\n        if (grid.isSolved()) return true;\r\n\r\n        let minTotalDist = Infinity;\r\n        for (let move of grid.getValidMoves()) {\r\n            if (move !== Grid.getReversedMove(path[path.length - 1])) {\r\n                let moveRecord = grid.applyMove(move);\r\n                path.push(move);\r\n\r\n                let output = this._searchIDAStar(grid, path, traveledDist + 1, bound);\r\n                if (output === true) return true;\r\n                if (output < minTotalDist) minTotalDist = output;\r\n\r\n                path.pop();\r\n                grid.reverseMove(moveRecord);\r\n            }\r\n        }\r\n        return minTotalDist;\r\n    } \r\n\r\n}\r\n\r\n\r\nclass Grid {\r\n\r\n    constructor(numRows, numCols, tiles, emptyPos, heuristic, traveledDist = 0,\r\n        heuristicValue = null, validMoves = null) {\r\n        this.numRows = numRows;\r\n        this.numCols = numCols;\r\n        this.tiles = tiles;\r\n        this.emptyPos = emptyPos;\r\n\r\n        this.heuristic = heuristic;\r\n        this.traveledDist = traveledDist;\r\n        this.heuristicValue = heuristicValue === null ? heuristic.calculate(this) : heuristicValue;\r\n\r\n        this.validMoves = validMoves === null ? this._precomputeValidMoves() : validMoves;\r\n    }\r\n\r\n    getTileCol(ind) {\r\n        return ind % this.numCols;\r\n    }\r\n\r\n    getTileRow(ind) {\r\n        return Math.floor(ind / this.numCols);\r\n    }\r\n\r\n    getIndex(row, col) {\r\n        return row * this.numCols + col;\r\n    }\r\n\r\n    getMoveDelta(move) {\r\n        const moveDeltaMap = {\r\n            'r': 1,\r\n            'l': -1,\r\n            'u': -this.numCols,\r\n            'd': this.numCols\r\n        }\r\n        return moveDeltaMap[move];\r\n    }\r\n\r\n    getMovedInd(move) {\r\n        return this.emptyPos - this.getMoveDelta(move);\r\n    }\r\n\r\n    static getReversedMove(move) {\r\n        return REVERSE_MOVE_MAP[move];\r\n    }\r\n\r\n    getTileDist(tile1, tile2) {\r\n        return Math.abs(this.getTileRow(tile1) - this.getTileRow(tile2)) +\r\n            Math.abs(this.getTileCol(tile1) - this.getTileCol(tile2));\r\n    }\r\n\r\n    applyMove(move) {\r\n        let oldHeuristicValue = this.heuristicValue;\r\n        let oldEmptyPos = this.emptyPos;\r\n\r\n        let movedInd = this.getMovedInd(move);\r\n        let endInd = this.emptyPos;\r\n\r\n        this.swap(endInd, movedInd);\r\n        this.emptyPos = movedInd;\r\n\r\n        this.traveledDist++;\r\n\r\n        this.heuristicValue = this.heuristic.update(this, movedInd, endInd, move);\r\n\r\n        return {heuristicValue: oldHeuristicValue, emptyPos: oldEmptyPos};\r\n    }\r\n\r\n    reverseMove(moveRecord) {\r\n        this.heuristic.reverseUpdate(this, moveRecord);\r\n        this.traveledDist--;\r\n\r\n        this.heuristicValue = moveRecord.heuristicValue;\r\n\r\n        this.swap(this.emptyPos, moveRecord.emptyPos);\r\n        this.emptyPos = moveRecord.emptyPos;\r\n    }\r\n\r\n    swap(pos1, pos2) {\r\n        [this.tiles[pos1], this.tiles[pos2]] = [this.tiles[pos2], this.tiles[pos1]];\r\n    }\r\n\r\n    _precomputeValidMoves() {\r\n        let moves;\r\n        let validMoves = [];\r\n        for (let emptyPos = 0; emptyPos < this.tiles.length; emptyPos++) {\r\n            moves = [];\r\n\r\n            let row = this.getTileRow(emptyPos);\r\n            let col = this.getTileCol(emptyPos);\r\n\r\n            if (row < this.numRows - 1) moves.push('u');\r\n            \r\n            if (row > 0) moves.push('d');\r\n            \r\n            if (col < this.numCols - 1) moves.push('l');\r\n            \r\n            if (col > 0) moves.push('r');\r\n\r\n            validMoves[emptyPos] = moves;\r\n        }\r\n        return validMoves;\r\n    }\r\n\r\n    getValidMoves() {\r\n        return this.validMoves[this.emptyPos];\r\n    }\r\n\r\n    isSolved() {\r\n        let solved = this.heuristic.isSolved(this.heuristicValue);\r\n        if (solved === undefined) {\r\n            return this.tiles.every((goalInd, ind) => goalInd === ind);\r\n        } else {\r\n            return solved;\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ const puzzle_algorithm = (PuzzleSolver);\n;// CONCATENATED MODULE: ./wwwroot/js/minescape/puzzle-solver.worker.js\n\r\n\r\nonmessage = function (e) {\r\n    let puzzle = new puzzle_algorithm(...e.data);\r\n    puzzle.solve().then(moves => postMessage(moves));\r\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///525\n")}},__webpack_module_cache__={};function __webpack_require__(c){var i=__webpack_module_cache__[c];if(void 0!==i)return i.exports;var n=__webpack_module_cache__[c]={exports:{}};return __webpack_modules__[c](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=c=>{var i=c&&c.__esModule?()=>c.default:()=>c;return __webpack_require__.d(i,{a:i}),i},__webpack_require__.d=(c,i)=>{for(var n in i)__webpack_require__.o(i,n)&&!__webpack_require__.o(c,n)&&Object.defineProperty(c,n,{enumerable:!0,get:i[n]})},__webpack_require__.o=(c,i)=>Object.prototype.hasOwnProperty.call(c,i);var __webpack_exports__=__webpack_require__(525)})();
//# sourceMappingURL=906.minescape-solvers.js.map